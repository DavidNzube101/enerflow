Search.setIndex({"docnames": ["assets/base", "assets/battery", "assets/energysystem", "assets/geospatial", "assets/heatpump", "assets/hydro", "assets/powergrid", "assets/solar", "assets/timeseries", "assets/wind", "index", "introduction", "models/agent", "models/optimizer", "models/predictor", "models/simulator", "notebooks/gefcom2014_solar", "notebooks/notebook", "problem/checks", "problem/dataset", "problem/environments", "problem/objectives", "runners/benchmark", "runners/experiment", "runners/scenarios", "spaces/base", "spaces/input", "spaces/output", "walkthrough"], "filenames": ["assets/base.rst", "assets/battery.rst", "assets/energysystem.rst", "assets/geospatial.rst", "assets/heatpump.rst", "assets/hydro.rst", "assets/powergrid.rst", "assets/solar.rst", "assets/timeseries.rst", "assets/wind.rst", "index.rst", "introduction.rst", "models/agent.rst", "models/optimizer.rst", "models/predictor.rst", "models/simulator.rst", "notebooks/gefcom2014_solar.ipynb", "notebooks/notebook.ipynb", "problem/checks.rst", "problem/dataset.rst", "problem/environments.rst", "problem/objectives.rst", "runners/benchmark.rst", "runners/experiment.rst", "runners/scenarios.rst", "spaces/base.rst", "spaces/input.rst", "spaces/output.rst", "walkthrough.rst"], "titles": ["Base", "Battery", "Energy System", "Geospatial", "Heatpump", "Hydro", "Power Grid", "Solar", "Timeseries", "Wind", "emflow: Open-source energy modelling framework", "Introduction", "Agent Class", "Optimizer Class", "Predictor Class", "Simulator Class", "GEFCom2024 Solar Example", "HEFTCom2024", "Checks", "Dataset", "Environments", "Objectives", "Benchmark", "Experiment", "Scenarios", "Base Space", "Input Space", "Output Space", "Walkthrough of the <cite>emflow</cite> framework"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 23, 25, 26, 27], "emflow": [11, 16], "fixedmount": 7, "surface_tilt": [7, 16], "float": [0, 1, 2, 3, 4, 5, 6, 7, 9], "0": [3, 7, 16, 17], "surface_azimuth": [7, 16], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 25, 26, 27], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 23, 26, 27], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 18, 19, 20, 23, 25], "singleaxistrackermount": 7, "axis_tilt": 7, "axis_azimuth": 7, "max_angl": 7, "tupl": [0, 2, 3, 7, 8, 15, 25], "90": [7, 17], "backtrack": 7, "bool": [0, 1, 2, 3, 4, 7, 8, 9], "true": [0, 1, 2, 3, 4, 7, 8, 9, 16, 17, 21], "gcr": 7, "2857142857142857": 7, "cross_axis_tilt": 7, "racking_model": 7, "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 19], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 15, 17, 19], "module_height": 7, "pvarrai": [7, 16], "capac": [4, 5, 6, 7, 9, 16, 17], "surface_area": [5, 6, 7], "effici": [5, 6, 7, 11, 28], "modul": [7, 10], "module_typ": [7, 16], "glass_polym": [7, 16], "module_paramet": 7, "dict": [5, 6, 7, 9, 15, 17, 19], "panda": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 19], "core": [0, 5, 6, 7, 8, 9, 11, 16, 19], "seri": [0, 1, 4, 7, 8, 9], "temperature_model_paramet": 7, "name": [0, 1, 2, 3, 4, 7, 8, 9, 16, 17, 19], "locat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17], "energydatamodel": [0, 1, 2, 7, 8, 9, 16, 19], "geospati": [0, 1, 2, 7, 8, 9, 10], "geoloc": [0, 1, 2, 3, 4, 7, 8, 9], "longitud": [0, 1, 2, 3, 4, 7, 9, 16, 17], "latitud": [0, 1, 2, 3, 4, 7, 9, 16, 17], "altitud": [0, 1, 2, 3, 4, 7, 9, 16], "tz": [0, 1, 2, 3, 4, 7, 9], "timezon": [0, 1, 2, 3, 4, 7, 9], "timeseri": [0, 1, 4, 7, 9, 10, 16], "abstract": [12, 13, 14, 15], "energyasset": [0, 1, 2, 4, 7, 9], "get_timeseri": 7, "t": [1, 4, 7, 9, 16, 17], "option": [1, 2, 3, 4, 5, 6, 7, 9, 13, 17], "geometry_to_geojson": [0, 1, 2, 3, 4, 7, 8, 9], "geometri": [0, 1, 2, 3, 4, 7, 8, 9], "plot_timeseri": [0, 1, 2, 4, 7, 9, 16], "start_dat": [0, 1, 2, 4, 7, 8, 9], "datetimeindex": [0, 1, 4, 7, 8, 9], "end_dat": [0, 1, 2, 4, 7, 8, 9], "ax": [0, 1, 2, 3, 4, 7, 8, 9, 16, 17], "plot": [0, 1, 4, 7, 8, 9, 10], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 17, 28], "its": [0, 1, 3, 4, 7, 8, 9], "built": [0, 1, 4, 7, 8, 9, 11], "method": [0, 1, 3, 4, 7, 8, 9, 11, 14, 25], "arg": [0, 1, 3, 4, 7, 8, 9], "The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 26, 27], "start": [0, 1, 3, 4, 7, 8, 9, 15, 17], "date": [0, 1, 4, 7, 8, 9, 17], "end": [0, 1, 3, 4, 7, 8, 9], "return": [0, 1, 4, 7, 8, 9, 12, 13, 14, 15, 17, 21], "matplotlib": [0, 1, 4, 7, 8, 9, 17], "to_datafram": [0, 1, 2, 3, 4, 7, 8, 9], "convert": [0, 1, 2, 3, 4, 7, 8, 9, 25], "data": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 19, 25], "datafram": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 19], "to_geojson": [0, 1, 2, 3, 4, 7, 8, 9], "exclude_non": [0, 1, 2, 3, 4, 7, 8, 9], "to_json": [0, 1, 2, 3, 4, 7, 8, 9, 16], "include_non": [0, 1, 2, 3, 4, 7, 8, 9], "pytz": [1, 4, 7, 9], "pvsystem": 7, "pv_arrai": 7, "list": [0, 2, 3, 7, 9, 17], "albedo": 7, "surface_typ": 7, "defin": [7, 10, 11, 16], "standard": [7, 11], "set": [3, 7, 11, 21, 28], "system": [4, 7, 10, 11, 16, 28], "attribut": [5, 6, 7], "model": [5, 6, 7, 11, 12, 13, 14, 15, 17, 23, 26, 27, 28], "function": [3, 7, 10, 13], "thi": [3, 7, 11, 14, 17, 28], "describ": [7, 28], "collect": [3, 7], "interact": [7, 11], "compon": [3, 7], "rather": [2, 7], "than": [2, 3, 7], "an": [2, 3, 4, 5, 6, 7, 12, 15], "instal": [7, 10], "ground": 7, "It": [3, 7], "i": [2, 3, 7, 11, 14, 16, 17], "typic": [3, 7], "combin": [3, 7], "modelchain": 7, "test": [3, 11], "here": [], "windturbin": 9, "frame": [0, 5, 6, 7, 8, 9, 19], "hub_height": 9, "rotor_diamet": 9, "turbine_model": 9, "power_curv": 9, "nonetyp": [0, 5, 6, 8, 9], "power_coefficient_curv": 9, "create_table_represent": 9, "windfarm": [9, 17], "wind_turbin": 9, "farm_effici": 9, "windpowerarea": 9, "area": [3, 5, 6, 8, 9], "purpos": [2, 3, 10], "featur": [3, 10, 14], "contribut": 10, "support": 10, "contact": 10, "step": [10, 15, 17], "1": [3, 10, 16, 17], "your": [10, 11], "2": [3, 10, 16, 17], "specifi": [3, 10], "dynam": 10, "state": [10, 12, 15, 17], "variabl": 10, "3": [3, 10, 16, 17], "action": [10, 12, 15, 17, 25], "4": [3, 10, 16, 17], "creat": [3, 10, 11, 14, 25], "environ": [10, 11, 12], "5": [3, 10, 16, 17], "establish": 10, "6": [3, 10, 16, 17], "design": [10, 11], "agent": 10, "polici": 10, "7": [10, 16, 17], "run": [10, 11, 23], "simul": [10, 11], "conclus": 10, "pv": 7, "wind": [10, 17], "dataset": [10, 17], "microgridenv": [10, 20], "hybridpowerplantenv": [10, 20], "energycommunityenv": [10, 20], "basescor": [10, 17, 21], "meansquarederror": [10, 21], "meanabsoluteerror": [10, 21], "check": [3, 10], "energybalancecheck": [10, 18], "massbalancecheck": [10, 18], "basespac": [10, 25, 26, 27], "input": [3, 10, 11, 14], "inputspac": [10, 15, 26], "statespac": [10, 26], "output": [5, 6, 10, 14, 28], "outputspac": [10, 27], "actionspac": [10, 27], "predictor": 10, "optim": [10, 11, 17], "experi": [10, 12], "benchmark": [10, 11], "scenario": [10, 11], "gefcom2024": 10, "solar": [10, 17], "load": [3, 10, 14], "gefcom2014": 10, "index": [3, 10, 16, 17], "search": 10, "page": [10, 11], "project": [3, 11], "cut": 11, "edg": [3, 11], "framework": 11, "analysi": 11, "energi": [4, 11, 26, 27], "resourc": [11, 28], "util": 11, "principl": 11, "openai": 11, "gym": [11, 17], "api": [11, 17], "offer": 11, "flexibl": 11, "where": 11, "variou": 11, "approach": [11, 28], "manag": 11, "can": [3, 11, 28], "philosophi": 11, "python": 11, "first": [11, 17], "problem": [11, 13, 17, 18, 19, 20, 21, 23], "centric": 11, "reusabl": 11, "modular": 11, "verif": 11, "valid": [3, 11], "enabl": 11, "mantra": 11, "agnost": 11, "facilit": 11, "research": 11, "develop": 11, "field": 11, "By": 11, "provid": [3, 4, 11, 17, 28], "extens": 11, "platform": 11, "allow": [3, 11, 28], "engin": 11, "scientist": 11, "divers": 11, "implement": [11, 14, 28], "varieti": 11, "algorithm": [3, 11], "differ": [3, 11, 28], "under": 11, "consist": [3, 11], "condit": 11, "explor": [11, 28], "innov": 11, "strategi": [11, 28], "integr": 11, "leverag": 11, "familiar": 11, "robust": 11, "ensur": 11, "eas": 11, "broad": 11, "compat": [3, 11], "exist": 11, "tool": 11, "mind": 11, "user": [11, 16], "easili": 11, "custom": 11, "extend": [3, 11], "suit": 11, "specif": [11, 21, 28], "need": [3, 11], "comprehens": [11, 28], "includ": [11, 28], "thorough": 11, "effect": 11, "comparison": [3, 11], "commun": 11, "driven": 11, "open": 11, "promot": 11, "collabor": 11, "solv": 11, "complex": 11, "To": [3, 11], "begin": [11, 28], "packag": [11, 16], "pip": 11, "Then": 11, "document": [3, 11, 16], "learn": [11, 12], "more": [2, 3, 11, 28], "about": [11, 28], "up": [11, 28], "we": 11, "welcom": 11, "whether": 11, "": [3, 11, 15], "improv": 11, "ad": [3, 11], "new": [3, 11, 15], "fix": 11, "bug": 11, "valuabl": 11, "see": 11, "our": 11, "guidelin": 11, "inform": [11, 28], "how": [11, 28], "get": [0, 3, 8, 11], "involv": [3, 11, 28], "For": 11, "question": 11, "feedback": 11, "pleas": 11, "visit": 11, "github": [11, 16], "issu": 11, "http": 11, "com": 11, "yourusernam": 11, "u": 11, "directli": 11, "through": 11, "websit": 11, "thank": 11, "you": [11, 28], "interest": 11, "look": 11, "forward": 11, "wai": 11, "which": [3, 11, 14, 28], "abc": [12, 13, 14, 15], "choose_act": [], "choos": 12, "given": [3, 12], "paramet": [12, 13, 14, 15], "current": 12, "chosen": 12, "reward": 12, "next_stat": [12, 17], "from": [0, 3, 8, 12, 14, 16, 17, 25, 28], "train": [12, 14, 17], "taken": [3, 12], "receiv": 12, "next": [12, 15, 28], "objective_funct": 13, "constraint": 13, "perform": [4, 13, 28], "minim": [13, 28], "maxim": [13, 28], "result": [3, 13], "load_data": 14, "recommend": [3, 14], "mandatori": 14, "subclass": 14, "mai": [3, 14], "overrid": 14, "create_featur": 14, "sthe": 14, "predict": [14, 17, 21], "make": [14, 17, 28], "must": [3, 14], "made": [14, 28], "initial_st": [15, 17], "reset": [15, 17], "initi": 15, "updat": 15, "appli": 15, "A": [2, 3, 15, 25], "contain": [3, 15, 19], "ani": [3, 15, 28], "addit": [3, 15, 17, 28], "info": 15, "import": [3, 16, 17], "sy": 16, "o": 16, "path": [3, 16, 17], "insert": 16, "abspath": 16, "pd": [16, 17], "edm": 16, "emf": 16, "gefcom2014_solar": 16, "gefcom2014solarenv": 16, "importerror": 16, "traceback": 16, "most": 16, "recent": 16, "call": 16, "last": 16, "cell": 16, "In": 16, "line": [3, 16, 17], "gt": [16, 17], "cannot": [16, 17], "39": 16, "sebaheg": 16, "__init__": [16, 17], "py": 16, "portfolio": [2, 16, 17], "df": [0, 8, 16, 17], "nameerror": 16, "read_csv": [16, 17], "raw": 16, "csv": [16, 17], "index_col": [16, 17], "header": 16, "parse_d": [16, 17], "timeseries_1": 16, "column_nam": [0, 8, 16], "power": [5, 10, 16], "pvsystem_1": 16, "145": 16, "37": [16, 17], "595": 16, "38": [16, 17], "36": 16, "timeseries_2": 16, "pvsystem_2": 16, "602": 16, "327": 16, "35": [16, 17], "timeseries_3": 16, "pvsystem_3": 16, "951": 16, "31": [16, 17], "21": [16, 17], "asset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17], "2013": 16, "06": 16, "01": [16, 17], "15": [16, 17], "lt": [16, 17], "figur": [2, 3, 16], "size": 16, "640x480": 16, "xlabel": 16, "timestamp": [16, 17], "13": [16, 17], "column": [16, 17], "level": 16, "var134": 16, "var157": 16, "var164": 16, "var165": 16, "var166": 16, "var167": 16, "var169": 16, "var175": 16, "var178": 16, "var228": 16, "var78": 16, "var79": 16, "dtype": 16, "23": [16, 17], "len": [16, 17], "2012": 16, "04": 16, "00": [16, 17], "8760": 16, "file": [3, 16, 17], "venv_emflow": 16, "lib": 16, "python3": 16, "11": [3, 16, 17], "site": [2, 16], "ipython": 16, "interactiveshel": 16, "3553": 16, "run_cod": 16, "exec": 16, "code_obj": 16, "self": [3, 16, 17], "user_global_n": 16, "user_n": 16, "main": 16, "78": 16, "pv_production_2": 16, "space": [16, 17], "box": [16, 17], "low": [16, 17], "high": [16, 17], "shape": [3, 16, 17, 21], "initial_datapoint": 16, "np": [16, 17], "float32": 16, "syntaxerror": 16, "invalid": [3, 16], "syntax": 16, "8": [3, 16, 17], "type": [2, 3, 5, 6, 7, 16, 17], "dataclass": 16, "baseproblem": 16, "union": [3, 16, 17], "energysystem": [0, 2, 16, 19], "9": [16, 17], "pass": 16, "descript": [17, 19], "energy_system": [17, 19], "runner": 23, "format": 25, "classmethod": [3, 25], "from_arrai": 25, "input_arrai": 25, "ndarrai": [2, 25], "numpi": [17, 21, 25], "arrai": [3, 21, 25], "to_arrai": 25, "properti": [3, 7, 25], "vector": 25, "from_tupl": 25, "input_tupl": 25, "to_tupl": [3, 25], "alia": [3, 8, 26, 27], "guid": 28, "librari": 28, "follow": 28, "facil": 28, "equip": 28, "other": [3, 28], "entiti": 28, "define_asset": 28, "add": [3, 17, 28], "detail": 28, "outlin": 28, "These": 28, "ar": [3, 17, 28], "repres": [3, 4, 5, 6, 28], "chang": 28, "over": 28, "time": [0, 8, 28], "dure": 28, "state_vari": 28, "define_st": 28, "now": [3, 28], "decis": 28, "define_act": 28, "elabor": 28, "possibl": [3, 28], "transit": 28, "respons": 28, "create_environ": 28, "further": 28, "should": [3, 28], "quantifi": 28, "goal": 28, "cost": 28, "define_object": 28, "agent_polici": 28, "design_polici": 28, "final": 28, "analyz": 28, "evalu": 28, "simulation_result": 28, "run_simul": 28, "instruct": 28, "what": 28, "expect": 28, "configur": 28, "fulli": 28, "understand": 28, "capabl": 28, "pinballloss": [10, 17, 21], "enerflow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 25, 26, 27], "act": [12, 17], "quantil": [17, 21], "score": [17, 21], "y_true": [17, 21], "y_pred": [17, 21], "mean": [3, 21], "comput": 21, "pinbal": [17, 21], "loss": 21, "between": [3, 21], "valu": [3, 17, 21], "multipl": [3, 21], "each": [3, 21], "correspond": 21, "param": 21, "like": [2, 3, 21], "2d": 21, "n_sampl": 21, "n_quantil": 21, "gymnasium": 17, "ef": 17, "geopanda": [], "gpd": [], "statsmodel": 17, "formula": 17, "smf": 17, "regress": [], "quantile_regress": [], "quantreg": 17, "iolib": 17, "smpickl": 17, "load_pickl": 17, "folium": 17, "pyplot": 17, "plt": 17, "mdate": [], "seaborn": [], "sn": [], "df_heftcom": 17, "data_heftcom2024": 17, "ref_datetim": 17, "valid_datetim": 17, "market_dai": 17, "df_coords_hornsea1": 17, "dwd_coords_hornsea1": 17, "df_coords_pes10": 17, "dwd_coords_pes10": 17, "area_pes10": 17, "geomultipolygon": [3, 7, 8, 17], "from_geojson": [3, 17], "pes10": 17, "geojson": [3, 7, 17], "hornsea": 17, "79": 17, "53": 17, "1218": 17, "solar_pes10": 17, "solarpowerarea": [7, 17], "geopolygon": [3, 7, 8, 9, 17], "m": 17, "map": 17, "zoom_start": 17, "feature_group1": 17, "featuregroup": 17, "farm": 17, "circlemark": 17, "radiu": [3, 17], "10": [3, 17], "color": [3, 17], "blue": 17, "add_to": 17, "feature_group2": 17, "multipolygon": [3, 17], "feature_group3": 17, "dwd": 17, "grid": [10, 17], "point": [3, 17], "lat": 17, "lon": 17, "red": 17, "row": 17, "iterrow": 17, "layercontrol": 17, "notebook": 17, "trust": 17, "heftcom2024": 10, "all": [3, 17], "organis": 17, "particip": 17, "free": 17, "extern": 17, "state_spac": 17, "solar_pow": 17, "inf": 17, "48": 17, "solar_instal": 17, "solar_avail": 17, "solar_forecast": 17, "wind_pow": 17, "wind_forecast": 17, "dayahead_pric": 17, "imbalance_pric": 17, "action_spac": 17, "power_quantile_forecast": 17, "power_bid": 17, "heftcom2024environ": 17, "env": 17, "def": 17, "train_end": 17, "time_lag": 17, "int": [0, 3, 5, 6, 8, 17], "els": [3, 17], "max": 17, "uniqu": 17, "idx_first_eval_dai": 17, "idx_count": 17, "initial_data": [], "market_day_previ": 17, "market_day_start_previ": 17, "get_level_valu": 17, "market_day_start": 17, "loc": 17, "solar_mwh_credit": 17, "reshap": 17, "solar_installedcapacity_mwp": 17, "solar_capacity_mwp": 17, "solardownwardradi": 17, "wind_mwh_credit": 17, "windspe": 17, "da_pric": 17, "ss_price": 17, "exogen": 17, "done": 17, "fals": [0, 1, 2, 3, 4, 7, 8, 9, 17], "2023": 17, "marketrevenu": 17, "calcul": 17, "bid": 17, "product": 17, "day_ahead_pric": 17, "single_system_pric": 17, "revenu": 17, "07": 17, "model_nam": 17, "rang": [3, 17], "100": 17, "save_model": 17, "f": 17, "q": 17, "save": 17, "_q": 17, "pickl": 17, "load_model": 17, "x": [3, 17], "y": [3, 17], "k": 17, "v": 17, "squeez": 17, "item": 17, "mod": 17, "total_generation_mwh": 17, "b": 17, "print": 17, "fit": 17, "max_it": 17, "2500": 17, "22": 17, "dropna": 17, "20": 17, "keyboardinterrupt": [], "34": [], "exampl": [], "venv_heftcom2024": [], "168": [], "vcov": [], "kernel": [], "bandwidth": [], "p_tol": [], "kwarg": 3, "166": [], "n_iter": [], "167": [], "beta0": [], "beta": [], "xtx": [], "dot": [], "xstar": [], "exog": 17, "169": [], "xty": [], "endog": [], "170": 17, "pinv": [], "24": 17, "arang": 17, "keyerror": [], "30": 17, "28": [], "29": 17, "33": 17, "q20": [], "25": 17, "26": 17, "27": 17, "load_predictor": 17, "scorer": 17, "nansum": 17, "2534482077": 17, "9752154": 17, "_": [], "append": 17, "titl": [], "text": 17, "loop": [], "glue": [], "togeth": [], "backtest": [], "constant": [], "random": [], "tabl": [], "66": 17, "factori": [2, 7], "abstractclass": [0, 3], "filenam": [0, 8], "get_data": [0, 8], "sensor": 0, "storage_capac": 1, "min_soc": 1, "max_charg": 1, "max_discharg": 1, "charge_effici": 1, "discharge_effici": 1, "add_asset": 2, "remove_asset": 2, "list_asset": 2, "get_summari": 2, "energycommun": 2, "trade": 2, "maintain": 2, "balanc": 2, "subplot": [2, 17], "docstr": 3, "from_point": 3, "linestr": 3, "coordin": 3, "basegeometri": 3, "compos": 3, "one": 3, "segment": 3, "dimension": 3, "ha": 3, "non": 3, "zero": 3, "length": 3, "approxim": 3, "curv": 3, "straight": 3, "unlik": 3, "linear": 3, "close": 3, "sequenc": 3, "z": 3, "numer": 3, "pair": 3, "tripl": 3, "n": 3, "two": 3, "svg": 3, "scale_factor": 3, "stroke_color": 3, "opac": 3, "polylin": 3, "element": 3, "factor": 3, "stroke": 3, "width": 3, "default": [3, 5, 6], "hex": 3, "string": 3, "66cc99": 3, "ff3333": 3, "number": 3, "xy": 3, "separ": 3, "offset_curv": 3, "distanc": 3, "quad_seg": 3, "16": [3, 17], "join_styl": 3, "bufferjoinstyl": 3, "round": 3, "mitre_limit": 3, "multilinestr": 3, "right": 3, "left": [3, 17], "side": 3, "determin": 3, "sign": 3, "neg": 3, "offset": 3, "posit": 3, "resolut": 3, "buffer": 3, "around": 3, "vertex": 3, "increas": 3, "keyword": 3, "join": 3, "style": 3, "outsid": 3, "corner": 3, "accept": 3, "mitr": 3, "bevel": 3, "ratio": [3, 4], "limit": 3, "veri": 3, "sharp": 3, "when": [3, 5, 6], "meet": 3, "angl": 3, "miter": 3, "far": 3, "beyond": 3, "origin": 3, "prevent": 3, "unreason": 3, "control": 3, "maximum": [3, 5, 6], "exce": 3, "behaviour": 3, "regard": 3, "orient": [3, 17], "depend": 3, "geo": 3, "version": 3, "With": 3, "retain": 3, "same": 3, "direct": 3, "revers": 3, "wa": 3, "previou": 3, "tri": 3, "preserv": 3, "parallel_offset": 3, "altern": 3, "older": 3, "instead": 3, "kept": 3, "backward": 3, "almost_equ": 3, "decim": 3, "equal": 3, "place": 3, "deprec": 3, "sinc": 3, "remov": 3, "becaus": 3, "confus": 3, "equals_exact": 3, "refer": 3, "requir": 3, "order": 3, "1e": 3, "unitless": 3, "boundari": 3, "lower": 3, "dimens": 3, "bound": 3, "polygon": 3, "empti": 3, "null": 3, "minimum": 3, "region": 3, "minx": 3, "mini": 3, "maxx": 3, "maxi": 3, "cap_styl": 3, "single_sid": 3, "within": 3, "produc": 3, "dilat": 3, "eros": 3, "small": 3, "sometim": 3, "tidi": 3, "fillet": 3, "buffercapstyl": 3, "squar": [3, 5, 6], "flat": 3, "circular": 3, "both": 3, "rectangular": 3, "onli": 3, "while": [3, 17], "midpoint": 3, "touch": 3, "singl": 3, "indic": 3, "hand": 3, "regular": 3, "cap": 3, "alwai": 3, "ignor": 3, "forc": 3, "equival": 3, "cap_flat": 3, "quadseg": 3, "strictli": 3, "wkt": 3, "g": [3, 4, 5, 6], "gon": 3, "approx": 3, "unit": 3, "circl": 3, "1365484905459": 3, "128": 3, "141513801144": 3, "triangl": 3, "exterior": 3, "coord": 3, "centroid": 3, "geometr": 3, "center": 3, "contains_properli": 3, "complet": 3, "common": 3, "full": 3, "convex_hul": 3, "imagin": 3, "elast": 3, "band": 3, "stretch": 3, "convex": 3, "hull": 3, "less": 3, "three": 3, "member": 3, "multipoint": 3, "triangular": 3, "access": 3, "coordinatesequ": 3, "covered_bi": 3, "cover": 3, "cross": 3, "grid_siz": 3, "disjoint": 3, "dwithin": 3, "envelop": 3, "consid": 3, "topolog": 3, "toler": 3, "absolut": 3, "geom_typ": 3, "geometrytyp": 3, "has_z": 3, "have": 3, "hausdorff_dist": 3, "hausdorff": 3, "interpol": 3, "normal": 3, "along": 3, "measur": 3, "out": 3, "handl": 3, "clamp": 3, "them": 3, "If": 3, "interpret": 3, "fraction": 3, "line_interpolate_point": 3, "intersect": 3, "is_clos": 3, "applic": [3, 17], "d": [3, 17], "is_empti": 3, "is_r": 3, "ring": 3, "is_simpl": 3, "simpl": 3, "is_valid": 3, "definit": 3, "sub": 3, "line_locate_point": 3, "nearest": 3, "minimum_clear": 3, "node": 3, "could": 3, "move": 3, "minimum_rotated_rectangl": 3, "rotat": 3, "rectangl": 3, "enclos": 3, "constrain": 3, "parallel": 3, "degener": 3, "oriented_envelop": 3, "form": 3, "canon": 3, "part": 3, "multi": 3, "overlap": 3, "point_on_surfac": 3, "guarante": 3, "cheapli": 3, "representative_point": 3, "relat": 3, "de": 3, "9im": 3, "matrix": 3, "relate_pattern": 3, "pattern": 3, "code": 3, "relationship": 3, "satisfi": 3, "copi": 3, "interior": 3, "unchang": 3, "is_ccw": 3, "clockwis": 3, "max_segment_length": 3, "vertic": 3, "everi": 3, "so": 3, "longer": 3, "evenli": 3, "subdivid": 3, "densifi": 3, "unmodifi": 3, "array_lik": 3, "greater": 3, "simplifi": 3, "preserve_topologi": 3, "dougla": 3, "peucker": 3, "unless": 3, "topologi": 3, "otherwis": 3, "symmetric_differ": 3, "symmetr": 3, "wkb": 3, "represent": 3, "wkb_hex": 3, "shell": 3, "hole": 3, "from_bound": 3, "xmin": 3, "ymin": 3, "xmax": 3, "ymax": 3, "construct": 3, "spatial": 3, "fill_color": 3, "fill": 3, "batteri": 10, "hydro": [6, 10], "heatpump": 10, "reservoir": [5, 6], "average_depth": [5, 6], "hydroelectr": [5, 6], "plant": [5, 6], "store": [5, 6], "water": [5, 6], "total": [5, 6, 17], "cubic": [5, 6], "meter": [5, 6], "surfac": [5, 6], "kilomet": [5, 6], "averag": [5, 6], "depth": [5, 6], "geograph": [5, 6], "hydroturbin": [5, 6], "turbine_typ": [5, 6], "operational_sinc": [5, 6], "individu": [5, 6], "turbin": [5, 6], "e": [4, 5, 6], "franci": [5, 6], "kaplan": [5, 6], "megawatt": [5, 6], "mw": [5, 6], "percentag": [5, 6], "year": [5, 6], "becam": [5, 6], "oper": [5, 6], "hydropowerpl": [5, 6], "river": [5, 6], "annual_output": [5, 6], "reservoir_capac": [5, 6], "environmental_impact": [5, 6], "maintenance_schedul": [5, 6], "powergrid": 6, "electricitydemand": 8, "electricityconsumpt": 8, "electricityareademand": 8, "electricityareaconsumpt": 8, "electricitysuppli": 8, "electricityproduct": 8, "electricityareasuppli": 8, "electricityareaproduct": 8, "heatingdemand": 8, "heatingconsumpt": 8, "heatingareademand": 8, "cop": 4, "energy_sourc": 4, "heat": 4, "pump": 4, "cool": 4, "kilowatt": 4, "kw": 4, "coeffici": 4, "electr": 4, "consum": 4, "primari": 4, "geotherm": 4, "time_spac": 17, "max_length": 17, "min_length": 17, "exogeneous_spac": 17, "n_market_dai": 17, "return_datafram": 17, "initial_datafram": 17, "ref_tim": 17, "_create_st": 17, "idx_market_dai": 17, "strftime": 17, "idx": 17, "initial_df": 17, "train_data": 17, "12": 17, "32": 17, "092224429059414": 17, "14": 17, "17": 17, "18": 17, "predictions_q": 17, "droplevel": 17, "mip": 17, "solar_mw": 17, "wind_mw": 17, "boa_mwh": 17, "predictions_q20": 17, "predictions_q30": 17, "predictions_q40": 17, "predictions_q50": 17, "predictions_q60": 17, "predictions_q70": 17, "predictions_q80": 17, "predictions_q90": 17, "2020": 17, "09": 17, "825196": 17, "001624": 17, "76": 17, "2108": 17, "444662": 17, "2206": 17, "067896": 17, "131": 17, "008": 17, "00000": 17, "189591": 17, "52": 17, "602142": 17, "968993": 17, "80": 17, "419721": 17, "95": 17, "607469": 17, "113": 17, "514992": 17, "138": 17, "769492": 17, "185": 17, "531116": 17, "2423": 17, "751669": 17, "601748": 17, "004990": 17, "87": 17, "630": 17, "87000": 17, "212647": 17, "45": 17, "440970": 17, "58": 17, "946516": 17, "71": 17, "895678": 17, "86": 17, "142042": 17, "102": 17, "906343": 17, "126": 17, "432197": 17, "171": 17, "951934": 17, "2003": 17, "149738": 17, "378300": 17, "008356": 17, "558": 17, "47": 17, "30000": 17, "02": 17, "626327": 17, "636333": 17, "51": 17, "282054": 17, "63": 17, "798042": 17, "77": 17, "194467": 17, "92": 17, "910992": 17, "114": 17, "863054": 17, "159": 17, "342024": 17, "1203": 17, "351890": 17, "161918": 17, "000241": 17, "75": 17, "574": 17, "27000": 17, "655625": 17, "460931": 17, "44": 17, "278910": 17, "56": 17, "398887": 17, "69": 17, "080706": 17, "83": 17, "845629": 17, "104": 17, "449515": 17, "147": 17, "932062": 17, "1180": 17, "475379": 17, "945536": 17, "008838": 17, "49": 17, "818": 17, "66000": 17, "03": 17, "180092": 17, "774801": 17, "749784": 17, "468942": 17, "61": 17, "474223": 17, "382278": 17, "94": 17, "782600": 17, "137": 17, "453701": 17, "714": 17, "881095": 17, "973990": 17, "006017": 17, "127": 17, "97": 17, "2332": 17, "037710": 17, "2487": 17, "180474": 17, "594": 17, "422": 17, "105": 17, "46": 17, "336": 17, "709802": 17, "384": 17, "475883": 17, "419": 17, "608531": 17, "447": 17, "791603": 17, "473": 17, "342823": 17, "496": 17, "363486": 17, "522": 17, "909066": 17, "553": 17, "146818": 17, "40366": 17, "565067": 17, "713284": 17, "012358": 17, "99": 17, "578": 17, "362": 17, "188": 17, "33001": 17, "314": 17, "445034": 17, "361": 17, "188391": 17, "396": 17, "432284": 17, "425": 17, "918531": 17, "453": 17, "224644": 17, "478": 17, "242510": 17, "508": 17, "093521": 17, "543": 17, "801611": 17, "17767": 17, "344153": 17, "453822": 17, "006461": 17, "590": 17, "122": 17, "291": 17, "533937": 17, "649465": 17, "371": 17, "658430": 17, "402": 17, "265137": 17, "431": 17, "315782": 17, "458": 17, "298024": 17, "491": 17, "614456": 17, "532": 17, "930841": 17, "23309": 17, "211453": 17, "194361": 17, "000563": 17, "110": 17, "82": 17, "524": 17, "642": 17, "195": 17, "103": 17, "268": 17, "265598": 17, "311": 17, "287853": 17, "345": 17, "746718": 17, "377": 17, "272451": 17, "407": 17, "921540": 17, "436": 17, "819809": 17, "585098": 17, "520": 17, "728865": 17, "15612": 17, "879041": 17, "863417": 17, "000624": 17, "93": 17, "468": 17, "762": 17, "238": 17, "685050": 17, "278": 17, "568551": 17, "947690": 17, "344": 17, "293837": 17, "376": 17, "674832": 17, "816720": 17, "448": 17, "733842": 17, "503": 17, "187818": 17, "13269": 17, "677237": 17, "53040": 17, "plotli": 17, "graph_obj": 17, "go": 17, "make_subplot": 17, "fig": 17, "col": 17, "shared_xax": 17, "vertical_spac": 17, "trace": 17, "add_trac": 17, "scatter": 17, "mode": 17, "gener": 17, "q50": 17, "da": 17, "price": 17, "im": 17, "cumsum": 17, "cumul": 17, "update_layout": 17, "xaxis4": 17, "rangeslid": 17, "visibl": 17, "height": 17, "500": 17, "legend": 17, "h": 17, "xanchor": 17, "yanchor": 17, "bottom": 17, "show": 17, "displai": 17, "vnd": 17, "v1": 17, "json": 17, "206": 17, "market": 17, "dai": 17, "date_rang": 17, "to_datetim": 17, "period": 17, "freq": 17, "30min": 17, "209": 17, "concat": 17, "write_html": 17, "chart": 17, "html": 17, "full_html": 17}, "objects": {"enerflow.assets": [[0, 0, 0, "-", "base"], [1, 0, 0, "-", "battery"], [2, 0, 0, "-", "energysystem"], [3, 0, 0, "-", "geospatial"], [4, 0, 0, "-", "heatpump"], [5, 0, 0, "-", "hydro"], [6, 0, 0, "-", "powergrid"], [7, 0, 0, "-", "solar"], [8, 0, 0, "-", "timeseries"], [9, 0, 0, "-", "wind"]], "enerflow.assets.base": [[0, 1, 1, "", "EnergyAsset"], [0, 1, 1, "", "EnergySystem"], [0, 1, 1, "", "Sensor"], [0, 1, 1, "", "TimeSeries"]], "enerflow.assets.base.EnergyAsset": [[0, 2, 1, "", "altitude"], [0, 3, 1, "", "geometry_to_geojson"], [0, 2, 1, "", "latitude"], [0, 2, 1, "", "location"], [0, 2, 1, "", "longitude"], [0, 2, 1, "", "name"], [0, 3, 1, "", "plot_timeseries"], [0, 2, 1, "", "timeseries"], [0, 3, 1, "", "to_dataframe"], [0, 3, 1, "", "to_geojson"], [0, 3, 1, "", "to_json"], [0, 2, 1, "", "tz"]], "enerflow.assets.base.EnergySystem": [[0, 2, 1, "", "assets"], [0, 3, 1, "", "geometry_to_geojson"], [0, 2, 1, "", "name"], [0, 3, 1, "", "to_dataframe"], [0, 3, 1, "", "to_geojson"], [0, 3, 1, "", "to_json"]], "enerflow.assets.base.Sensor": [[0, 3, 1, "", "geometry_to_geojson"], [0, 2, 1, "", "location"], [0, 2, 1, "", "name"], [0, 3, 1, "", "to_dataframe"], [0, 3, 1, "", "to_geojson"], [0, 3, 1, "", "to_json"]], "enerflow.assets.base.TimeSeries": [[0, 2, 1, "", "column_names"], [0, 2, 1, "", "df"], [0, 2, 1, "", "filename"], [0, 3, 1, "", "geometry_to_geojson"], [0, 3, 1, "", "get_data"], [0, 2, 1, "", "name"], [0, 3, 1, "", "plot"], [0, 3, 1, "", "to_dataframe"], [0, 3, 1, "", "to_geojson"], [0, 3, 1, "", "to_json"]], "enerflow.assets.battery": [[1, 1, 1, "", "Battery"]], "enerflow.assets.battery.Battery": [[1, 2, 1, "", "altitude"], [1, 2, 1, "", "charge_efficiency"], [1, 2, 1, "", "discharge_efficiency"], [1, 3, 1, "", "geometry_to_geojson"], [1, 2, 1, "", "latitude"], [1, 2, 1, "", "location"], [1, 2, 1, "", "longitude"], [1, 2, 1, "", "max_charge"], [1, 2, 1, "", "max_discharge"], [1, 2, 1, "", "min_soc"], [1, 2, 1, "", "name"], [1, 3, 1, "", "plot_timeseries"], [1, 2, 1, "", "storage_capacity"], [1, 2, 1, "", "timeseries"], [1, 3, 1, "", "to_dataframe"], [1, 3, 1, "", "to_geojson"], [1, 3, 1, "", "to_json"], [1, 2, 1, "", "tz"]], "enerflow.assets.energysystem": [[2, 1, 1, "", "EnergyCommunity"], [2, 1, 1, "", "Portfolio"], [2, 1, 1, "", "Site"]], "enerflow.assets.energysystem.EnergyCommunity": [[2, 2, 1, "", "assets"], [2, 3, 1, "", "geometry_to_geojson"], [2, 2, 1, "", "name"], [2, 3, 1, "", "to_dataframe"], [2, 3, 1, "", "to_geojson"], [2, 3, 1, "", "to_json"]], "enerflow.assets.energysystem.Portfolio": [[2, 2, 1, "", "assets"], [2, 3, 1, "", "geometry_to_geojson"], [2, 2, 1, "", "name"], [2, 3, 1, "", "plot_timeseries"], [2, 2, 1, "", "sites"], [2, 3, 1, "", "to_dataframe"], [2, 3, 1, "", "to_geojson"], [2, 3, 1, "", "to_json"]], "enerflow.assets.energysystem.Site": [[2, 3, 1, "", "add_assets"], [2, 2, 1, "", "altitude"], [2, 2, 1, "", "assets"], [2, 3, 1, "", "geometry_to_geojson"], [2, 3, 1, "", "get_summary"], [2, 2, 1, "", "latitude"], [2, 3, 1, "", "list_assets"], [2, 2, 1, "", "location"], [2, 2, 1, "", "longitude"], [2, 2, 1, "", "name"], [2, 3, 1, "", "remove_asset"], [2, 3, 1, "", "to_dataframe"], [2, 3, 1, "", "to_geojson"], [2, 3, 1, "", "to_json"], [2, 2, 1, "", "tz"]], "enerflow.assets.geospatial": [[3, 1, 1, "", "GeoLocation"], [3, 1, 1, "", "GeoMultiPolygon"], [3, 1, 1, "", "GeoPolygon"], [3, 1, 1, "", "LineString"], [3, 2, 1, "", "Location"]], "enerflow.assets.geospatial.GeoLocation": [[3, 2, 1, "", "altitude"], [3, 3, 1, "", "from_point"], [3, 3, 1, "", "geometry_to_geojson"], [3, 2, 1, "", "latitude"], [3, 2, 1, "", "longitude"], [3, 2, 1, "", "name"], [3, 3, 1, "", "to_dataframe"], [3, 3, 1, "", "to_geojson"], [3, 3, 1, "", "to_json"], [3, 3, 1, "", "to_tuple"], [3, 4, 1, "", "tuple"], [3, 2, 1, "", "tz"]], "enerflow.assets.geospatial.GeoMultiPolygon": [[3, 3, 1, "", "from_geojson"], [3, 4, 1, "", "geojson"], [3, 3, 1, "", "geometry_to_geojson"], [3, 2, 1, "", "multipolygon"], [3, 2, 1, "", "name"], [3, 3, 1, "", "to_dataframe"], [3, 3, 1, "", "to_geojson"], [3, 3, 1, "", "to_json"]], "enerflow.assets.geospatial.GeoPolygon": [[3, 3, 1, "", "almost_equals"], [3, 4, 1, "", "area"], [3, 4, 1, "", "boundary"], [3, 4, 1, "", "bounds"], [3, 3, 1, "", "buffer"], [3, 4, 1, "", "centroid"], [3, 3, 1, "", "contains"], [3, 3, 1, "", "contains_properly"], [3, 4, 1, "", "convex_hull"], [3, 4, 1, "", "coords"], [3, 3, 1, "", "covered_by"], [3, 3, 1, "", "covers"], [3, 3, 1, "", "crosses"], [3, 3, 1, "", "difference"], [3, 3, 1, "", "disjoint"], [3, 3, 1, "", "distance"], [3, 3, 1, "", "dwithin"], [3, 4, 1, "", "envelope"], [3, 3, 1, "", "equals"], [3, 3, 1, "", "equals_exact"], [3, 4, 1, "", "exterior"], [3, 3, 1, "", "from_bounds"], [3, 4, 1, "", "geom_type"], [3, 3, 1, "", "geometryType"], [3, 3, 1, "", "geometry_to_geojson"], [3, 4, 1, "", "has_z"], [3, 3, 1, "", "hausdorff_distance"], [3, 4, 1, "", "interiors"], [3, 3, 1, "", "interpolate"], [3, 3, 1, "", "intersection"], [3, 3, 1, "", "intersects"], [3, 4, 1, "", "is_closed"], [3, 4, 1, "", "is_empty"], [3, 4, 1, "", "is_ring"], [3, 4, 1, "", "is_simple"], [3, 4, 1, "", "is_valid"], [3, 4, 1, "", "length"], [3, 3, 1, "", "line_interpolate_point"], [3, 3, 1, "", "line_locate_point"], [3, 4, 1, "", "minimum_clearance"], [3, 4, 1, "", "minimum_rotated_rectangle"], [3, 2, 1, "", "name"], [3, 3, 1, "", "normalize"], [3, 4, 1, "", "oriented_envelope"], [3, 3, 1, "", "overlaps"], [3, 3, 1, "", "point_on_surface"], [3, 3, 1, "", "project"], [3, 3, 1, "", "relate"], [3, 3, 1, "", "relate_pattern"], [3, 3, 1, "", "representative_point"], [3, 3, 1, "", "reverse"], [3, 3, 1, "", "segmentize"], [3, 3, 1, "", "simplify"], [3, 3, 1, "", "svg"], [3, 3, 1, "", "symmetric_difference"], [3, 3, 1, "", "to_dataframe"], [3, 3, 1, "", "to_geojson"], [3, 3, 1, "", "to_json"], [3, 3, 1, "", "touches"], [3, 4, 1, "", "type"], [3, 3, 1, "", "union"], [3, 3, 1, "", "within"], [3, 4, 1, "", "wkb"], [3, 4, 1, "", "wkb_hex"], [3, 4, 1, "", "wkt"], [3, 4, 1, "", "xy"]], "enerflow.assets.geospatial.LineString": [[3, 3, 1, "", "almost_equals"], [3, 4, 1, "", "area"], [3, 4, 1, "", "boundary"], [3, 4, 1, "", "bounds"], [3, 3, 1, "", "buffer"], [3, 4, 1, "", "centroid"], [3, 3, 1, "", "contains"], [3, 3, 1, "", "contains_properly"], [3, 4, 1, "", "convex_hull"], [3, 4, 1, "", "coords"], [3, 3, 1, "", "covered_by"], [3, 3, 1, "", "covers"], [3, 3, 1, "", "crosses"], [3, 3, 1, "", "difference"], [3, 3, 1, "", "disjoint"], [3, 3, 1, "", "distance"], [3, 3, 1, "", "dwithin"], [3, 4, 1, "", "envelope"], [3, 3, 1, "", "equals"], [3, 3, 1, "", "equals_exact"], [3, 4, 1, "", "geom_type"], [3, 3, 1, "", "geometryType"], [3, 4, 1, "", "has_z"], [3, 3, 1, "", "hausdorff_distance"], [3, 3, 1, "", "interpolate"], [3, 3, 1, "", "intersection"], [3, 3, 1, "", "intersects"], [3, 4, 1, "", "is_closed"], [3, 4, 1, "", "is_empty"], [3, 4, 1, "", "is_ring"], [3, 4, 1, "", "is_simple"], [3, 4, 1, "", "is_valid"], [3, 4, 1, "", "length"], [3, 3, 1, "", "line_interpolate_point"], [3, 3, 1, "", "line_locate_point"], [3, 4, 1, "", "minimum_clearance"], [3, 4, 1, "", "minimum_rotated_rectangle"], [3, 3, 1, "", "normalize"], [3, 3, 1, "", "offset_curve"], [3, 4, 1, "", "oriented_envelope"], [3, 3, 1, "", "overlaps"], [3, 3, 1, "", "parallel_offset"], [3, 3, 1, "", "point_on_surface"], [3, 3, 1, "", "project"], [3, 3, 1, "", "relate"], [3, 3, 1, "", "relate_pattern"], [3, 3, 1, "", "representative_point"], [3, 3, 1, "", "reverse"], [3, 3, 1, "", "segmentize"], [3, 3, 1, "", "simplify"], [3, 3, 1, "", "svg"], [3, 3, 1, "", "symmetric_difference"], [3, 3, 1, "", "touches"], [3, 4, 1, "", "type"], [3, 3, 1, "", "union"], [3, 3, 1, "", "within"], [3, 4, 1, "", "wkb"], [3, 4, 1, "", "wkb_hex"], [3, 4, 1, "", "wkt"], [3, 4, 1, "", "xy"]], "enerflow.assets.heatpump": [[4, 1, 1, "", "HeatPump"]], "enerflow.assets.heatpump.HeatPump": [[4, 2, 1, "", "altitude"], [4, 2, 1, "", "capacity"], [4, 2, 1, "", "cop"], [4, 2, 1, "", "energy_source"], [4, 3, 1, "", "geometry_to_geojson"], [4, 2, 1, "", "latitude"], [4, 2, 1, "", "location"], [4, 2, 1, "", "longitude"], [4, 2, 1, "", "name"], [4, 3, 1, "", "plot_timeseries"], [4, 2, 1, "", "timeseries"], [4, 3, 1, "", "to_dataframe"], [4, 3, 1, "", "to_geojson"], [4, 3, 1, "", "to_json"], [4, 2, 1, "", "tz"]], "enerflow.assets.hydro": [[5, 1, 1, "", "HydroPowerPlant"], [5, 1, 1, "", "HydroTurbine"], [5, 1, 1, "", "Reservoir"]], "enerflow.assets.hydro.HydroPowerPlant": [[5, 2, 1, "", "annual_output"], [5, 2, 1, "", "capacity"], [5, 2, 1, "", "environmental_impact"], [5, 2, 1, "", "location"], [5, 2, 1, "", "maintenance_schedule"], [5, 2, 1, "", "operational_since"], [5, 2, 1, "", "reservoir_capacity"], [5, 2, 1, "", "river"], [5, 2, 1, "", "turbine_type"]], "enerflow.assets.hydro.HydroTurbine": [[5, 2, 1, "", "capacity"], [5, 2, 1, "", "efficiency"], [5, 2, 1, "", "operational_since"], [5, 2, 1, "", "turbine_type"]], "enerflow.assets.hydro.Reservoir": [[5, 2, 1, "", "average_depth"], [5, 2, 1, "", "capacity"], [5, 2, 1, "", "location"], [5, 2, 1, "", "surface_area"]], "enerflow.assets.powergrid": [[6, 1, 1, "", "HydroPowerPlant"], [6, 1, 1, "", "HydroTurbine"], [6, 1, 1, "", "Reservoir"]], "enerflow.assets.powergrid.HydroPowerPlant": [[6, 2, 1, "", "annual_output"], [6, 2, 1, "", "capacity"], [6, 2, 1, "", "environmental_impact"], [6, 2, 1, "", "location"], [6, 2, 1, "", "maintenance_schedule"], [6, 2, 1, "", "operational_since"], [6, 2, 1, "", "reservoir_capacity"], [6, 2, 1, "", "river"], [6, 2, 1, "", "turbine_type"]], "enerflow.assets.powergrid.HydroTurbine": [[6, 2, 1, "", "capacity"], [6, 2, 1, "", "efficiency"], [6, 2, 1, "", "operational_since"], [6, 2, 1, "", "turbine_type"]], "enerflow.assets.powergrid.Reservoir": [[6, 2, 1, "", "average_depth"], [6, 2, 1, "", "capacity"], [6, 2, 1, "", "location"], [6, 2, 1, "", "surface_area"]], "enerflow.assets.solar": [[7, 1, 1, "", "FixedMount"], [7, 1, 1, "", "PVArray"], [7, 1, 1, "", "PVSystem"], [7, 1, 1, "", "SingleAxisTrackerMount"], [7, 1, 1, "", "SolarPowerArea"]], "enerflow.assets.solar.FixedMount": [[7, 2, 1, "", "surface_azimuth"], [7, 2, 1, "", "surface_tilt"]], "enerflow.assets.solar.PVArray": [[7, 2, 1, "", "altitude"], [7, 2, 1, "", "capacity"], [7, 2, 1, "", "efficiency"], [7, 3, 1, "", "geometry_to_geojson"], [7, 3, 1, "", "get_timeseries"], [7, 2, 1, "", "latitude"], [7, 2, 1, "", "location"], [7, 2, 1, "", "longitude"], [7, 2, 1, "", "module"], [7, 2, 1, "", "module_parameters"], [7, 2, 1, "", "module_type"], [7, 2, 1, "", "name"], [7, 3, 1, "", "plot_timeseries"], [7, 2, 1, "", "surface_area"], [7, 2, 1, "", "surface_azimuth"], [7, 2, 1, "", "surface_tilt"], [7, 2, 1, "", "temperature_model_parameters"], [7, 2, 1, "", "timeseries"], [7, 3, 1, "", "to_dataframe"], [7, 3, 1, "", "to_geojson"], [7, 3, 1, "", "to_json"], [7, 2, 1, "", "tz"]], "enerflow.assets.solar.PVSystem": [[7, 2, 1, "", "albedo"], [7, 2, 1, "", "altitude"], [7, 2, 1, "", "capacity"], [7, 3, 1, "", "geometry_to_geojson"], [7, 2, 1, "", "latitude"], [7, 2, 1, "", "location"], [7, 2, 1, "", "longitude"], [7, 2, 1, "", "name"], [7, 3, 1, "", "plot_timeseries"], [7, 2, 1, "", "pv_arrays"], [7, 2, 1, "", "surface_azimuth"], [7, 2, 1, "", "surface_tilt"], [7, 2, 1, "", "surface_type"], [7, 2, 1, "", "timeseries"], [7, 3, 1, "", "to_dataframe"], [7, 3, 1, "", "to_geojson"], [7, 3, 1, "", "to_json"], [7, 2, 1, "", "tz"]], "enerflow.assets.solar.SingleAxisTrackerMount": [[7, 2, 1, "", "axis_azimuth"], [7, 2, 1, "", "axis_tilt"], [7, 2, 1, "", "backtrack"], [7, 2, 1, "", "cross_axis_tilt"], [7, 2, 1, "", "gcr"], [7, 2, 1, "", "max_angle"], [7, 2, 1, "", "module_height"], [7, 2, 1, "", "racking_model"]], "enerflow.assets.solar.SolarPowerArea": [[7, 2, 1, "", "altitude"], [7, 2, 1, "", "capacity"], [7, 4, 1, "", "geojson"], [7, 3, 1, "", "geometry_to_geojson"], [7, 2, 1, "", "geopolygon"], [7, 2, 1, "", "latitude"], [7, 2, 1, "", "location"], [7, 2, 1, "", "longitude"], [7, 2, 1, "", "name"], [7, 3, 1, "", "plot_timeseries"], [7, 2, 1, "", "timeseries"], [7, 3, 1, "", "to_dataframe"], [7, 3, 1, "", "to_geojson"], [7, 3, 1, "", "to_json"], [7, 2, 1, "", "tz"]], "enerflow.assets.timeseries": [[8, 2, 1, "", "ElectricityAreaConsumption"], [8, 1, 1, "", "ElectricityAreaDemand"], [8, 2, 1, "", "ElectricityAreaProduction"], [8, 1, 1, "", "ElectricityAreaSupply"], [8, 2, 1, "", "ElectricityConsumption"], [8, 1, 1, "", "ElectricityDemand"], [8, 2, 1, "", "ElectricityProduction"], [8, 1, 1, "", "ElectricitySupply"], [8, 1, 1, "", "HeatingAreaDemand"], [8, 2, 1, "", "HeatingConsumption"], [8, 1, 1, "", "HeatingDemand"]], "enerflow.assets.timeseries.ElectricityAreaDemand": [[8, 2, 1, "", "area"], [8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enerflow.assets.timeseries.ElectricityAreaSupply": [[8, 2, 1, "", "area"], [8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enerflow.assets.timeseries.ElectricityDemand": [[8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "location"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enerflow.assets.timeseries.ElectricitySupply": [[8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "location"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enerflow.assets.timeseries.HeatingAreaDemand": [[8, 2, 1, "", "area"], [8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enerflow.assets.timeseries.HeatingDemand": [[8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "location"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enerflow.assets.wind": [[9, 1, 1, "", "WindFarm"], [9, 1, 1, "", "WindPowerArea"], [9, 1, 1, "", "WindTurbine"]], "enerflow.assets.wind.WindFarm": [[9, 2, 1, "", "altitude"], [9, 2, 1, "", "capacity"], [9, 2, 1, "", "farm_efficiency"], [9, 3, 1, "", "geometry_to_geojson"], [9, 2, 1, "", "latitude"], [9, 2, 1, "", "location"], [9, 2, 1, "", "longitude"], [9, 2, 1, "", "name"], [9, 3, 1, "", "plot_timeseries"], [9, 2, 1, "", "timeseries"], [9, 3, 1, "", "to_dataframe"], [9, 3, 1, "", "to_geojson"], [9, 3, 1, "", "to_json"], [9, 2, 1, "", "tz"], [9, 2, 1, "", "wind_turbines"]], "enerflow.assets.wind.WindPowerArea": [[9, 2, 1, "", "area"], [9, 2, 1, "", "capacity"], [9, 2, 1, "", "farm_efficiency"], [9, 2, 1, "", "geopolygon"], [9, 2, 1, "", "wind_turbines"]], "enerflow.assets.wind.WindTurbine": [[9, 2, 1, "", "altitude"], [9, 2, 1, "", "capacity"], [9, 3, 1, "", "create_table_representation"], [9, 3, 1, "", "geometry_to_geojson"], [9, 2, 1, "", "hub_height"], [9, 2, 1, "", "latitude"], [9, 2, 1, "", "location"], [9, 2, 1, "", "longitude"], [9, 2, 1, "", "name"], [9, 3, 1, "", "plot_timeseries"], [9, 2, 1, "", "power_coefficient_curve"], [9, 2, 1, "", "power_curve"], [9, 2, 1, "", "rotor_diameter"], [9, 2, 1, "", "timeseries"], [9, 3, 1, "", "to_dataframe"], [9, 3, 1, "", "to_geojson"], [9, 3, 1, "", "to_json"], [9, 2, 1, "", "turbine_model"], [9, 2, 1, "", "tz"]], "enerflow.models": [[12, 0, 0, "-", "agent"], [13, 0, 0, "-", "optimizer"], [14, 0, 0, "-", "predictor"], [15, 0, 0, "-", "simulator"]], "enerflow.models.agent": [[12, 1, 1, "", "Agent"]], "enerflow.models.agent.Agent": [[12, 3, 1, "", "act"], [12, 3, 1, "", "learn"]], "enerflow.models.optimizer": [[13, 1, 1, "", "Optimizer"]], "enerflow.models.optimizer.Optimizer": [[13, 3, 1, "", "optimize"]], "enerflow.models.predictor": [[14, 1, 1, "", "Predictor"]], "enerflow.models.predictor.Predictor": [[14, 3, 1, "", "create_features"], [14, 3, 1, "", "load_data"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "train"]], "enerflow.models.simulator": [[15, 1, 1, "", "Simulator"]], "enerflow.models.simulator.Simulator": [[15, 3, 1, "", "reset"], [15, 3, 1, "", "step"]], "enerflow.problems": [[18, 0, 0, "-", "checks"], [19, 0, 0, "-", "dataset"], [20, 0, 0, "-", "environments"], [21, 0, 0, "-", "objectives"]], "enerflow.problems.checks": [[18, 1, 1, "", "EnergyBalanceCheck"], [18, 1, 1, "", "MassBalanceCheck"]], "enerflow.problems.dataset": [[19, 1, 1, "", "Dataset"]], "enerflow.problems.dataset.Dataset": [[19, 2, 1, "", "data"], [19, 2, 1, "", "description"], [19, 2, 1, "", "energy_system"], [19, 2, 1, "", "name"]], "enerflow.problems.environments": [[20, 1, 1, "", "EnergyCommunityEnv"], [20, 1, 1, "", "HybridPowerPlantEnv"], [20, 1, 1, "", "MicroGridEnv"]], "enerflow.problems.objectives": [[21, 1, 1, "", "BaseScore"], [21, 1, 1, "", "MeanAbsoluteError"], [21, 1, 1, "", "MeanSquaredError"], [21, 1, 1, "", "PinballLoss"]], "enerflow.problems.objectives.PinballLoss": [[21, 3, 1, "", "score"]], "enerflow.runners": [[22, 0, 0, "-", "benchmark"], [23, 0, 0, "-", "experiment"], [24, 0, 0, "-", "scenarios"]], "enerflow.runners.experiment": [[23, 1, 1, "", "Experiment"]], "enerflow.runners.experiment.Experiment": [[23, 3, 1, "", "run"]], "enerflow.spaces": [[25, 0, 0, "-", "base"], [26, 0, 0, "-", "input"], [27, 0, 0, "-", "output"]], "enerflow.spaces.base": [[25, 1, 1, "", "BaseSpace"]], "enerflow.spaces.base.BaseSpace": [[25, 3, 1, "", "from_array"], [25, 3, 1, "", "from_tuple"], [25, 3, 1, "", "to_array"], [25, 3, 1, "", "to_tuple"], [25, 4, 1, "", "tuple"], [25, 4, 1, "", "vector"]], "enerflow.spaces.input": [[26, 1, 1, "", "InputSpace"], [26, 2, 1, "", "StateSpace"]], "enerflow.spaces.output": [[27, 2, 1, "", "ActionSpace"], [27, 1, 1, "", "OutputSpace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pv": [], "asset": [10, 28], "wind": 9, "emflow": [10, 28], "open": 10, "sourc": 10, "energi": [2, 10, 17, 28], "model": 10, "framework": [10, 28], "introduct": [10, 11], "walkthrough": [10, 28], "problem": 10, "space": [10, 25, 26, 27], "runner": 10, "notebook": 10, "exampl": [3, 10, 16], "indic": 10, "tabl": 10, "purpos": 11, "featur": 11, "instal": 11, "contribut": 11, "support": 11, "contact": 11, "agent": [12, 17, 28], "class": [12, 13, 14, 15, 16], "optim": 13, "predictor": [14, 17], "simul": [15, 28], "gefcom2024": 16, "solar": [7, 16], "load": [16, 17], "gefcom2014": 16, "data": [16, 17], "creat": [16, 17, 28], "check": 18, "dataset": 19, "environ": [17, 20, 28], "object": [17, 21, 28], "benchmark": 22, "experi": 23, "scenario": 24, "base": [0, 25], "input": 26, "output": 27, "step": 28, "1": 28, "defin": 28, "your": 28, "2": 28, "specifi": 28, "dynam": 28, "state": 28, "variabl": 28, "3": 28, "action": 28, "4": 28, "5": 28, "establish": 28, "function": 28, "6": 28, "design": 28, "polici": 28, "7": 28, "run": [17, 28], "conclus": 28, "plot": 17, "system": [2, 17], "batteri": 1, "geospati": 3, "paramet": 3, "return": 3, "note": 3, "see": 3, "also": 3, "heatpump": 4, "hydro": 5, "power": 6, "grid": 6, "timeseri": 8, "backtest": 17, "valid": 17, "set": 17, "heftcom2024": 17}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Introduction": [[11, "introduction"]], "Purpose": [[11, "purpose"]], "Features": [[11, "features"]], "Installation": [[11, "installation"]], "Contributing": [[11, "contributing"]], "Support and Contact": [[11, "support-and-contact"]], "GEFCom2024 Solar Example": [[16, "GEFCom2024-Solar-Example"]], "Load GEFCom2014 solar data": [[16, "Load-GEFCom2014-solar-data"]], "Create data classes": [[16, "Create-data-classes"]], "Walkthrough of the emflow framework": [[28, "walkthrough-of-the-emflow-framework"]], "Step 1: Define Your Energy Assets": [[28, "step-1-define-your-energy-assets"]], "Step 2: Specify Dynamic State Variables": [[28, "step-2-specify-dynamic-state-variables"]], "Step 3: Define Action Variables": [[28, "step-3-define-action-variables"]], "Step 4: Create the Environment": [[28, "step-4-create-the-environment"]], "Step 5: Establish the Objective Function": [[28, "step-5-establish-the-objective-function"]], "Step 6: Design Agents\u2019 Policies": [[28, "step-6-design-agents-policies"]], "Step 7: Run the Simulated Environment": [[28, "step-7-run-the-simulated-environment"]], "Conclusion": [[28, "conclusion"]], "Agent Class": [[12, "module-enerflow.models.agent"]], "Optimizer Class": [[13, "optimizer-class"]], "Predictor Class": [[14, "predictor-class"]], "Simulator Class": [[15, "simulator-class"]], "Checks": [[18, "module-enerflow.problems.checks"]], "Dataset": [[19, "module-enerflow.problems.dataset"]], "Environments": [[20, "module-enerflow.problems.environments"]], "Objectives": [[21, "module-enerflow.problems.objectives"]], "Benchmark": [[22, "module-enerflow.runners.benchmark"]], "Experiment": [[23, "module-enerflow.runners.experiment"]], "Scenarios": [[24, "module-enerflow.runners.scenarios"]], "Base Space": [[25, "module-enerflow.spaces.base"]], "Input Space": [[26, "module-enerflow.spaces.input"]], "Output Space": [[27, "module-enerflow.spaces.output"]], "emflow: Open-source energy modelling framework": [[10, "emflow-open-source-energy-modelling-framework"]], "\u25b6\ufe0f Introduction": [[10, null]], "\ud83e\ude9c Walkthrough": [[10, null]], "\ud83d\udcdd Notebook Examples": [[10, null]], "\ud83d\udd0b Energy Assets": [[10, null]], "\ud83e\udde9 Energy Problems": [[10, null]], "\ud83d\udce6 Spaces": [[10, null]], "\ud83e\udd16 Energy Models": [[10, null]], "\u267b\ufe0f Runners": [[10, null]], "Indices and tables": [[10, "indices-and-tables"]], "Hydro": [[5, "module-enerflow.assets.hydro"]], "Power Grid": [[6, "module-enerflow.assets.powergrid"]], "Base": [[0, "module-enerflow.assets.base"]], "Battery": [[1, "module-enerflow.assets.battery"]], "Energy System": [[2, "module-enerflow.assets.energysystem"]], "Geospatial": [[3, "module-enerflow.assets.geospatial"]], "Parameters": [[3, "parameters"], [3, "id1"], [3, "id3"], [3, "id8"], [3, "id13"], [3, "id17"], [3, "id23"], [3, "id29"], [3, "id31"]], "Examples": [[3, "examples"], [3, "id2"], [3, "id5"], [3, "id6"], [3, "id9"], [3, "id11"], [3, "id12"], [3, "id14"], [3, "id15"], [3, "id20"], [3, "id21"], [3, "id24"], [3, "id26"], [3, "id28"], [3, "id30"]], "Returns": [[3, "returns"], [3, "id4"], [3, "id7"], [3, "id10"], [3, "id16"], [3, "id18"], [3, "id22"], [3, "id25"]], "Notes": [[3, "notes"], [3, "id19"]], "See also": [[3, "see-also"], [3, "id27"]], "Heatpump": [[4, "module-enerflow.assets.heatpump"]], "Solar": [[7, "module-enerflow.assets.solar"]], "Timeseries": [[8, "module-enerflow.assets.timeseries"]], "Wind": [[9, "module-enerflow.assets.wind"]], "HEFTCom2024": [[17, "HEFTCom2024"]], "Load data": [[17, "Load-data"]], "Create and plot energy system": [[17, "Create-and-plot-energy-system"]], "Create Environment": [[17, "Create-Environment"]], "Create Objective": [[17, "Create-Objective"]], "Create Predictor": [[17, "Create-Predictor"]], "Create Agent": [[17, "Create-Agent"]], "Run in backtest on validation set": [[17, "Run-in-backtest-on-validation-set"]]}, "indexentries": {}})