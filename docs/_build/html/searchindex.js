Search.setIndex({"docnames": ["assets", "assets/base", "assets/container", "assets/geospatial", "assets/heatpump", "assets/hydro", "assets/powergrid", "assets/pv", "assets/timeseries", "assets/wind", "examples", "examples/building", "examples/microgrid", "index", "introduction", "models", "models/agent", "models/optimizer", "models/predictor", "models/simulator", "walkthrough"], "filenames": ["assets.rst", "assets/base.rst", "assets/container.rst", "assets/geospatial.rst", "assets/heatpump.rst", "assets/hydro.rst", "assets/powergrid.rst", "assets/pv.rst", "assets/timeseries.rst", "assets/wind.rst", "examples.rst", "examples/building.rst", "examples/microgrid.rst", "index.rst", "introduction.rst", "models.rst", "models/agent.rst", "models/optimizer.rst", "models/predictor.rst", "models/simulator.rst", "walkthrough.rst"], "titles": ["Energy assets", "Base classes", "Container classes", "Geospatial classes", "HeatPump classes", "Hydro classes", "Power grid classes", "PV classes", "Time series classes", "Wind classes", "Examples", "Building Environment", "MicroGrid Environment", "emflow: Open-source energy modelling framework", "Welcome to the emflow Project", "Models", "Agent Module", "Optimizer Module", "Predictor Module", "Simulator Module", "Walkthrough of the <cite>emflow</cite> framework"], "terms": {"geospati": [0, 1, 2, 7, 8, 9, 13], "class": [0, 11, 12, 13, 16, 17, 18, 19], "locat": [0, 1, 2, 3, 5, 7, 8, 9], "longitud": [0, 2, 3], "latitud": [0, 2, 3], "altitud": [0, 2, 3], "tz": [0, 2, 3], "name": [0, 1, 2, 3, 6, 7, 8, 9], "from_point": [0, 3], "linestr": [0, 3], "polygon": [0, 3, 8], "pv": [0, 13], "fixedmount": [0, 7], "surface_tilt": [0, 7], "surface_azimuth": [0, 7], "singleaxistrackermount": [0, 7], "axis_tilt": [0, 7], "axis_azimuth": [0, 7], "max_angl": [0, 7], "backtrack": [0, 7], "gcr": [0, 7], "cross_axis_tilt": [0, 7], "racking_model": [0, 7], "module_height": [0, 7], "pvarrai": [0, 7], "capac": [0, 4, 5, 6, 7, 9], "effici": [0, 5, 7, 14, 20], "area": [0, 5, 7, 8, 9], "modul": [0, 7, 11, 12, 13, 15], "module_typ": [0, 7], "module_paramet": [0, 7], "temperature_model_paramet": [0, 7], "pvsystem": [0, 7], "arrai": [0, 7, 11, 12], "albedo": [0, 7], "surface_typ": [0, 7], "wind": [0, 11, 12, 13], "windturbin": [0, 9], "hub_height": [0, 9], "rotor_diamet": [0, 9], "turbine_model": [0, 9], "power_curv": [0, 9], "power_coefficient_curv": [0, 9], "windfarm": [0, 9], "wind_turbin": [0, 9], "farm_effici": [0, 9], "windpowerarea": [0, 9], "hydro": [0, 13], "reservoir": [0, 5], "surface_area": [0, 5], "average_depth": [0, 5], "hydroturbin": [0, 5], "turbine_typ": [0, 5], "operational_sinc": [0, 5], "hydropowerpl": [0, 5], "river": [0, 5], "annual_output": [0, 5], "reservoir_capac": [0, 5], "environmental_impact": [0, 5], "maintenance_schedul": [0, 5], "heatpump": [0, 13], "cop": [0, 4], "energy_sourc": [0, 4], "power": [0, 5, 11, 12, 13], "grid": [0, 11, 12, 13], "carrier": [0, 6], "type": [0, 2, 5, 6], "bu": [0, 6], "line": [0, 6], "start_bu": [0, 6], "end_bu": [0, 6], "transform": [0, 6], "primary_bu": [0, 6], "secondary_bu": [0, 6], "link": [0, 6], "subnetwork": [0, 6], "buse": [0, 6], "network": [0, 6], "energydatamodel": [1, 2, 3, 4, 5, 6, 7, 8, 9], "energyasset": [1, 2, 7, 9], "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "none": [1, 2, 3, 5, 7, 8, 9, 11, 12, 17], "object": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 19], "timeseri": [1, 8], "datafram": [1, 5, 9], "sensor": 1, "site": 2, "asset": [2, 13], "list": [2, 6, 7, 9, 11, 12], "base": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 16, 17, 18, 19], "factori": [2, 6], "option": [2, 5, 11, 12, 17], "float": [2, 3, 4, 5, 6, 7, 9, 11, 12], "timezon": [2, 3], "add_asset": 2, "remove_asset": 2, "list_asset": 2, "get_summari": 2, "energysystem": 2, "add_sit": 2, "remove_sit": 2, "portfolio": 2, "A": [2, 11, 12, 19], "i": [2, 3, 11, 12, 14, 18], "like": 2, "an": [2, 4, 5, 11, 12, 16, 19], "us": [2, 4, 5, 11, 12, 14, 16, 18, 20], "more": [2, 14, 20], "purpos": [2, 13], "trade": 2, "energi": [2, 4, 6, 11, 12, 14], "rather": 2, "than": 2, "maintain": 2, "balanc": 2, "virtualpowerpl": 2, "flexibl": [2, 14], "thi": [3, 6, 11, 12, 14, 20], "docstr": 3, "classmethod": [3, 11, 12], "point": [3, 6], "coordin": 3, "shell": 3, "hole": 3, "repres": [4, 5, 11, 12, 20], "heat": 4, "pump": 4, "system": [4, 14, 20], "The": [4, 5, 6, 11, 12, 14, 16, 17, 18, 19], "cool": 4, "kilowatt": 4, "kw": 4, "coeffici": 4, "perform": [4, 11, 12, 17, 20], "ratio": 4, "provid": [4, 11, 12, 14, 20], "electr": [4, 6], "consum": 4, "primari": [4, 6], "sourc": [4, 11, 12], "e": [4, 5, 6, 11, 12], "g": [4, 5, 6, 11, 12], "geotherm": 4, "model": [5, 14, 16, 17, 18, 19, 20], "hydroelectr": 5, "plant": 5, "store": [5, 11, 12], "water": 5, "total": [5, 11, 12], "cubic": 5, "meter": 5, "surfac": 5, "squar": 5, "kilomet": 5, "averag": 5, "depth": 5, "geograph": 5, "int": [5, 11, 12], "individu": [5, 11, 12], "turbin": 5, "attribut": [5, 11, 12], "franci": 5, "kaplan": 5, "maximum": [5, 6], "output": [5, 18, 20], "megawatt": 5, "mw": 5, "percentag": 5, "year": 5, "when": [5, 11, 12], "becam": 5, "oper": 5, "default": [5, 11, 12], "panda": [5, 7, 9], "core": [5, 7, 9, 14], "frame": [5, 9, 11, 12], "dict": [5, 7, 9, 11, 12], "nonetyp": [5, 9], "powergrid": 6, "ga": 6, "renew": 6, "fossil": 6, "identifi": 6, "associ": 6, "start": [6, 19], "end": [6, 11, 12], "side": 6, "secondari": 6, "0": 7, "tupl": [7, 11, 12, 19], "90": 7, "bool": [7, 11, 12], "true": 7, "2857142857142857": 7, "glass_polym": 7, "seri": 7, "electricitydemand": 8, "electricityareademand": 8, "electricityproduct": 8, "electricityareaproduct": 8, "heatingdemand": 8, "heatingareademand": 8, "heatingproduct": 8, "heatingareaproduct": 8, "energypric": 8, "carbonintens": 8, "microgrid": [10, 11, 13], "environ": [10, 13, 14, 16], "state": [10, 11, 12, 13, 16, 19], "microgridenv": [10, 11, 12], "build": [10, 13], "contain": [11, 12, 19], "openai": [11, 12, 14], "gym": [11, 12, 14], "emflow": [11, 12, 16, 17, 18, 19], "exampl": [11, 12, 13], "consumpt": [11, 12], "pv_product": [11, 12], "wind_product": [11, 12], "battery_storag": [11, 12], "hydrogen_storag": [11, 12], "grid_import": [11, 12], "grid_import_peak": [11, 12], "spot_market_pric": [11, 12], "vector": [11, 12], "arg": [11, 12], "kwh": [11, 12], "h": [11, 12], "product": [11, 12], "from": [11, 12, 16, 20], "solar": [11, 12], "potenti": [11, 12], "batteri": [11, 12], "hydrogen": [11, 12], "import": [11, 12], "peak": [11, 12], "nok": [11, 12], "spot": [11, 12], "market": [11, 12], "price": [11, 12], "trondheim": [11, 12], "properti": [11, 12], "ndarrai": [11, 12], "from_vector": [11, 12], "env": [11, 12], "custom": [11, 12, 14], "simul": [11, 12, 13, 14, 15], "metadata": [11, 12], "ani": [11, 12, 19, 20], "render": [11, 12], "mode": [11, 12], "human": [11, 12], "step": [11, 12, 13, 19], "action": [11, 12, 13, 16, 19], "run": [11, 12, 13, 14], "one": [11, 12], "timestep": [11, 12], "": [11, 12, 14, 19], "dynam": [11, 12, 13], "episod": [11, 12], "reach": [11, 12], "you": [11, 12, 14, 20], "ar": [11, 12, 20], "respons": [11, 12, 20], "call": [11, 12], "reset": [11, 12, 19], "accept": [11, 12], "return": [11, 12, 16, 17, 18, 19], "either": [11, 12], "observ": [11, 12], "reward": [11, 12, 16], "termin": [11, 12], "truncat": [11, 12], "info": [11, 12, 19], "acttyp": [11, 12], "agent": [11, 12, 13, 15], "element": [11, 12], "observation_spac": [11, 12], "mai": [11, 12], "instanc": [11, 12], "numpi": [11, 12], "posit": [11, 12], "veloc": [11, 12], "certain": [11, 12], "amount": [11, 12], "result": [11, 12, 17], "take": [11, 12], "whether": [11, 12, 14], "defin": [11, 12, 13, 14], "under": [11, 12, 14], "mdp": [11, 12], "task": [11, 12], "In": [11, 12], "case": [11, 12], "further": [11, 12, 20], "could": [11, 12], "undefin": [11, 12], "condit": [11, 12, 14], "outsid": [11, 12], "scope": [11, 12], "satisfi": [11, 12], "typic": [11, 12], "timelimit": [11, 12], "also": [11, 12], "indic": [11, 12], "physic": [11, 12], "go": [11, 12], "out": [11, 12], "bound": [11, 12], "can": [11, 12, 14, 20], "prematur": [11, 12], "befor": [11, 12], "dictionari": [11, 12], "auxiliari": [11, 12], "diagnost": [11, 12], "inform": [11, 12, 14, 20], "help": [11, 12], "debug": [11, 12], "learn": [11, 12, 14, 16], "log": [11, 12], "might": [11, 12], "metric": [11, 12], "describ": [11, 12, 20], "variabl": [11, 12, 13], "hidden": [11, 12], "term": [11, 12], "combin": [11, 12], "produc": [11, 12], "It": [11, 12], "distinguish": [11, 12], "howev": [11, 12], "deprec": [11, 12], "favour": [11, 12], "two": [11, 12], "boolean": [11, 12], "remov": [11, 12], "futur": [11, 12], "version": [11, 12], "done": [11, 12], "valu": [11, 12], "ha": [11, 12], "which": [11, 12, 14, 18, 20], "signal": [11, 12], "emit": [11, 12], "differ": [11, 12, 14, 20], "reason": [11, 12], "mayb": [11, 12], "underli": [11, 12], "wa": [11, 12], "solv": [11, 12, 14], "successfulli": [11, 12], "exceed": [11, 12], "enter": [11, 12], "invalid": [11, 12], "initi": [11, 12, 19], "method": [11, 12, 14], "random": [11, 12], "number": [11, 12], "gener": [11, 12], "seed": [11, 12], "integ": [11, 12], "yet": [11, 12], "If": [11, 12], "alreadi": [11, 12], "rng": [11, 12], "should": [11, 12, 20], "moreov": [11, 12], "right": [11, 12], "after": [11, 12], "never": [11, 12], "again": [11, 12], "prng": [11, 12], "doe": [11, 12], "have": [11, 12], "pass": [11, 12], "chosen": [11, 12, 16], "some": [11, 12], "entropi": [11, 12], "timestamp": [11, 12], "dev": [11, 12], "urandom": [11, 12], "even": [11, 12], "exist": [11, 12, 14], "usual": [11, 12], "want": [11, 12], "been": [11, 12], "pleas": [11, 12, 14], "refer": [11, 12], "minim": [11, 12, 17, 20], "abov": [11, 12], "see": [11, 12, 14], "paradigm": [11, 12], "addit": [11, 12, 19, 20], "specifi": [11, 12, 13], "how": [11, 12, 14, 20], "depend": [11, 12], "specif": [11, 12, 14, 20], "analog": [11, 12], "complement": [11, 12], "close": [11, 12], "fals": [11, 12], "comput": [11, 12], "render_mod": [11, 12], "dure": [11, 12, 20], "set": [11, 12, 14, 20], "support": [11, 12, 13], "vari": [11, 12], "per": [11, 12], "And": [11, 12], "third": [11, 12], "parti": [11, 12], "all": [11, 12], "By": [11, 12, 14], "convent": [11, 12], "continu": [11, 12], "current": [11, 12, 16], "displai": [11, 12], "rgb_arrai": [11, 12], "singl": [11, 12], "shape": [11, 12], "x": [11, 12], "y": [11, 12], "3": [11, 12, 13], "rgb": [11, 12], "pixel": [11, 12], "imag": [11, 12], "rgb_array_list": [11, 12], "sinc": [11, 12], "last": [11, 12], "each": [11, 12], "ansi": [11, 12], "string": [11, 12], "stringio": [11, 12], "style": [11, 12], "text": [11, 12], "represent": [11, 12], "time": [11, 12, 20], "includ": [11, 12, 14, 20], "newlin": [11, 12], "escap": [11, 12], "sequenc": [11, 12], "color": [11, 12], "note": [11, 12], "make": [11, 12, 18, 20], "sure": [11, 12], "your": [11, 12, 13, 14], "kei": [11, 12], "recommend": [11, 12], "super": [11, 12], "implement": [11, 12, 14, 20], "function": [11, 12, 13, 17], "overrid": [11, 12], "subclass": [11, 12], "necessari": [11, 12], "cleanup": [11, 12], "automat": [11, 12], "themselv": [11, 12], "garbag": [11, 12], "collect": [11, 12], "program": [11, 12], "exit": [11, 12], "welcom": 13, "project": 13, "introduct": 13, "featur": 13, "instal": 13, "contribut": 13, "contact": 13, "walkthrough": 13, "1": 13, "2": 13, "4": 13, "creat": [13, 14], "5": 13, "establish": 13, "6": 13, "design": [13, 14], "polici": 13, "7": 13, "conclus": 13, "predictor": [13, 15], "optim": [13, 14, 15], "index": 13, "search": 13, "page": [13, 14], "cut": 14, "edg": 14, "framework": 14, "analysi": 14, "resourc": [14, 20], "util": 14, "principl": 14, "api": 14, "offer": 14, "interact": 14, "where": 14, "variou": 14, "approach": [14, 20], "manag": 14, "test": 14, "benchmark": 14, "facilit": 14, "research": 14, "develop": 14, "field": 14, "standard": 14, "extens": 14, "platform": 14, "allow": [14, 20], "engin": 14, "data": [14, 18], "scientist": 14, "divers": 14, "varieti": 14, "algorithm": 14, "consist": 14, "explor": [14, 20], "innov": 14, "strategi": [14, 20], "integr": 14, "leverag": 14, "familiar": 14, "robust": 14, "ensur": 14, "eas": 14, "broad": 14, "compat": 14, "tool": 14, "modular": 14, "built": 14, "mind": 14, "enabl": 14, "user": 14, "easili": 14, "extend": 14, "suit": 14, "need": 14, "scenario": 14, "comprehens": [14, 20], "thorough": 14, "effect": 14, "comparison": 14, "commun": 14, "driven": 14, "open": 14, "promot": 14, "collabor": 14, "complex": 14, "problem": [14, 17], "To": 14, "begin": [14, 20], "first": 14, "packag": 14, "pip": 14, "Then": 14, "document": 14, "about": [14, 20], "up": [14, 20], "we": 14, "improv": 14, "ad": 14, "new": [14, 19], "fix": 14, "bug": 14, "input": [14, 18], "valuabl": 14, "our": 14, "guidelin": 14, "get": 14, "involv": [14, 20], "For": 14, "question": 14, "feedback": 14, "visit": 14, "github": 14, "issu": 14, "http": 14, "com": 14, "yourusernam": 14, "u": 14, "directli": 14, "through": 14, "websit": 14, "thank": 14, "interest": 14, "look": 14, "forward": 14, "wai": 14, "choose_act": 16, "choos": 16, "given": [16, 18], "paramet": [16, 17, 18, 19], "next_stat": 16, "experi": 16, "train": [16, 18], "taken": 16, "receiv": 16, "next": [16, 19, 20], "objective_funct": 17, "constraint": 17, "maxim": [17, 20], "training_data": 18, "predict": 18, "input_data": 18, "made": [18, 20], "initial_st": 19, "updat": 19, "appli": 19, "guid": 20, "librari": 20, "follow": 20, "facil": 20, "equip": 20, "other": 20, "entiti": 20, "define_asset": 20, "add": 20, "detail": 20, "outlin": 20, "These": 20, "chang": 20, "over": 20, "state_vari": 20, "define_st": 20, "now": 20, "decis": 20, "define_act": 20, "elabor": 20, "possibl": 20, "transit": 20, "create_environ": 20, "quantifi": 20, "goal": 20, "cost": 20, "define_object": 20, "agent_polici": 20, "design_polici": 20, "final": 20, "analyz": 20, "evalu": 20, "simulation_result": 20, "run_simul": 20, "instruct": 20, "what": 20, "expect": 20, "configur": 20, "fulli": 20, "understand": 20, "capabl": 20}, "objects": {"emflow.examples": [[11, 0, 0, "-", "building"], [12, 0, 0, "-", "microgrid"]], "emflow.examples.building": [[11, 1, 1, "", "MicroGridEnv"], [11, 1, 1, "", "State"]], "emflow.examples.building.MicroGridEnv": [[11, 2, 1, "", "close"], [11, 3, 1, "", "metadata"], [11, 2, 1, "", "render"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "step"]], "emflow.examples.building.State": [[11, 3, 1, "", "battery_storage"], [11, 3, 1, "", "consumption"], [11, 2, 1, "", "from_vector"], [11, 3, 1, "", "grid_import"], [11, 3, 1, "", "grid_import_peak"], [11, 3, 1, "", "hydrogen_storage"], [11, 3, 1, "", "pv_production"], [11, 3, 1, "", "spot_market_price"], [11, 4, 1, "", "vector"], [11, 3, 1, "", "wind_production"]], "emflow.examples.microgrid": [[12, 1, 1, "", "MicroGridEnv"], [12, 1, 1, "", "State"]], "emflow.examples.microgrid.MicroGridEnv": [[12, 2, 1, "", "close"], [12, 3, 1, "", "metadata"], [12, 2, 1, "", "render"], [12, 2, 1, "", "reset"], [12, 2, 1, "", "step"]], "emflow.examples.microgrid.State": [[12, 3, 1, "", "battery_storage"], [12, 3, 1, "", "consumption"], [12, 2, 1, "", "from_vector"], [12, 3, 1, "", "grid_import"], [12, 3, 1, "", "grid_import_peak"], [12, 3, 1, "", "hydrogen_storage"], [12, 3, 1, "", "pv_production"], [12, 3, 1, "", "spot_market_price"], [12, 4, 1, "", "vector"], [12, 3, 1, "", "wind_production"]], "emflow.models": [[16, 0, 0, "-", "agent"], [17, 0, 0, "-", "optimizer"], [18, 0, 0, "-", "predictor"], [19, 0, 0, "-", "simulator"]], "emflow.models.agent": [[16, 1, 1, "", "Agent"]], "emflow.models.agent.Agent": [[16, 2, 1, "", "choose_action"], [16, 2, 1, "", "learn"]], "emflow.models.optimizer": [[17, 1, 1, "", "Optimizer"]], "emflow.models.optimizer.Optimizer": [[17, 2, 1, "", "optimize"]], "emflow.models.predictor": [[18, 1, 1, "", "Predictor"]], "emflow.models.predictor.Predictor": [[18, 2, 1, "", "predict"], [18, 2, 1, "", "train"]], "emflow.models.simulator": [[19, 1, 1, "", "Simulator"]], "emflow.models.simulator.Simulator": [[19, 2, 1, "", "reset"], [19, 2, 1, "", "step"]], "energydatamodel": [[1, 0, 0, "-", "base"], [2, 0, 0, "-", "container"], [3, 0, 0, "-", "geospatial"], [4, 0, 0, "-", "heatpump"], [5, 0, 0, "-", "hydro"], [6, 0, 0, "-", "powergrid"], [7, 0, 0, "-", "pv"], [8, 0, 0, "-", "timeseries"], [9, 0, 0, "-", "wind"]], "energydatamodel.base": [[1, 1, 1, "", "EnergyAsset"], [1, 1, 1, "", "Sensor"], [1, 1, 1, "", "TimeSeries"]], "energydatamodel.base.EnergyAsset": [[1, 3, 1, "", "location"], [1, 3, 1, "", "name"]], "energydatamodel.base.Sensor": [[1, 3, 1, "", "location"], [1, 3, 1, "", "name"]], "energydatamodel.base.TimeSeries": [[1, 3, 1, "", "name"]], "energydatamodel.container": [[2, 1, 1, "", "EnergySystem"], [2, 1, 1, "", "Portfolio"], [2, 1, 1, "", "Site"], [2, 1, 1, "", "VirtualPowerPlant"]], "energydatamodel.container.EnergySystem": [[2, 2, 1, "", "add_assets"], [2, 2, 1, "", "add_sites"], [2, 3, 1, "", "assets"], [2, 2, 1, "", "get_summary"], [2, 2, 1, "", "remove_asset"], [2, 2, 1, "", "remove_site"], [2, 3, 1, "", "sites"]], "energydatamodel.container.Site": [[2, 2, 1, "", "add_assets"], [2, 3, 1, "", "altitude"], [2, 3, 1, "", "assets"], [2, 2, 1, "", "get_summary"], [2, 3, 1, "", "latitude"], [2, 2, 1, "", "list_assets"], [2, 3, 1, "", "location"], [2, 3, 1, "", "longitude"], [2, 3, 1, "", "name"], [2, 2, 1, "", "remove_asset"], [2, 3, 1, "", "tz"]], "energydatamodel.geospatial": [[3, 1, 1, "", "LineString"], [3, 1, 1, "", "Location"], [3, 1, 1, "", "Polygon"]], "energydatamodel.geospatial.Location": [[3, 3, 1, "", "altitude"], [3, 2, 1, "", "from_point"], [3, 3, 1, "", "latitude"], [3, 3, 1, "", "longitude"], [3, 3, 1, "", "name"], [3, 3, 1, "", "tz"]], "energydatamodel.geospatial.Polygon": [[3, 3, 1, "", "name"]], "energydatamodel.heatpump": [[4, 1, 1, "", "HeatPump"]], "energydatamodel.heatpump.HeatPump": [[4, 3, 1, "", "capacity"], [4, 3, 1, "", "cop"], [4, 3, 1, "", "energy_source"]], "energydatamodel.hydro": [[5, 1, 1, "", "HydroPowerPlant"], [5, 1, 1, "", "HydroTurbine"], [5, 1, 1, "", "Reservoir"]], "energydatamodel.hydro.HydroPowerPlant": [[5, 3, 1, "", "annual_output"], [5, 3, 1, "", "capacity"], [5, 3, 1, "", "environmental_impact"], [5, 3, 1, "", "location"], [5, 3, 1, "", "maintenance_schedule"], [5, 3, 1, "", "operational_since"], [5, 3, 1, "", "reservoir_capacity"], [5, 3, 1, "", "river"], [5, 3, 1, "", "turbine_type"]], "energydatamodel.hydro.HydroTurbine": [[5, 3, 1, "", "capacity"], [5, 3, 1, "", "efficiency"], [5, 3, 1, "", "operational_since"], [5, 3, 1, "", "turbine_type"]], "energydatamodel.hydro.Reservoir": [[5, 3, 1, "", "average_depth"], [5, 3, 1, "", "capacity"], [5, 3, 1, "", "location"], [5, 3, 1, "", "surface_area"]], "energydatamodel.powergrid": [[6, 1, 1, "", "Bus"], [6, 1, 1, "", "Carrier"], [6, 1, 1, "", "Line"], [6, 1, 1, "", "Link"], [6, 1, 1, "", "Network"], [6, 1, 1, "", "SubNetwork"], [6, 1, 1, "", "Transformer"]], "energydatamodel.powergrid.Bus": [[6, 3, 1, "", "carrier"], [6, 3, 1, "", "name"]], "energydatamodel.powergrid.Carrier": [[6, 3, 1, "", "name"], [6, 3, 1, "", "type"]], "energydatamodel.powergrid.Line": [[6, 3, 1, "", "capacity"], [6, 3, 1, "", "end_bus"], [6, 3, 1, "", "name"], [6, 3, 1, "", "start_bus"]], "energydatamodel.powergrid.Link": [[6, 3, 1, "", "capacity"], [6, 3, 1, "", "end_bus"], [6, 3, 1, "", "name"], [6, 3, 1, "", "start_bus"]], "energydatamodel.powergrid.Network": [[6, 3, 1, "", "links"], [6, 3, 1, "", "name"], [6, 3, 1, "", "subnetworks"], [6, 3, 1, "", "transformers"]], "energydatamodel.powergrid.SubNetwork": [[6, 3, 1, "", "buses"], [6, 3, 1, "", "lines"], [6, 3, 1, "", "name"]], "energydatamodel.powergrid.Transformer": [[6, 3, 1, "", "capacity"], [6, 3, 1, "", "name"], [6, 3, 1, "", "primary_bus"], [6, 3, 1, "", "secondary_bus"]], "energydatamodel.pv": [[7, 1, 1, "", "FixedMount"], [7, 1, 1, "", "PVArray"], [7, 1, 1, "", "PVSystem"], [7, 1, 1, "", "SingleAxisTrackerMount"]], "energydatamodel.pv.FixedMount": [[7, 3, 1, "", "surface_azimuth"], [7, 3, 1, "", "surface_tilt"]], "energydatamodel.pv.PVArray": [[7, 3, 1, "", "area"], [7, 3, 1, "", "capacity"], [7, 3, 1, "", "efficiency"], [7, 3, 1, "", "module"], [7, 3, 1, "", "module_parameters"], [7, 3, 1, "", "module_type"], [7, 3, 1, "", "temperature_model_parameters"]], "energydatamodel.pv.PVSystem": [[7, 3, 1, "", "albedo"], [7, 3, 1, "", "arrays"], [7, 3, 1, "", "surface_type"]], "energydatamodel.pv.SingleAxisTrackerMount": [[7, 3, 1, "", "axis_azimuth"], [7, 3, 1, "", "axis_tilt"], [7, 3, 1, "", "backtrack"], [7, 3, 1, "", "cross_axis_tilt"], [7, 3, 1, "", "gcr"], [7, 3, 1, "", "max_angle"], [7, 3, 1, "", "module_height"], [7, 3, 1, "", "racking_model"]], "energydatamodel.timeseries": [[8, 1, 1, "", "CarbonIntensity"], [8, 1, 1, "", "ElectricityAreaDemand"], [8, 1, 1, "", "ElectricityAreaProduction"], [8, 1, 1, "", "ElectricityDemand"], [8, 1, 1, "", "ElectricityProduction"], [8, 1, 1, "", "EnergyPrices"], [8, 1, 1, "", "HeatingAreaDemand"], [8, 1, 1, "", "HeatingAreaProduction"], [8, 1, 1, "", "HeatingDemand"], [8, 1, 1, "", "HeatingProduction"]], "energydatamodel.timeseries.CarbonIntensity": [[8, 3, 1, "", "area"]], "energydatamodel.timeseries.ElectricityAreaDemand": [[8, 3, 1, "", "area"]], "energydatamodel.timeseries.ElectricityAreaProduction": [[8, 3, 1, "", "area"]], "energydatamodel.timeseries.ElectricityDemand": [[8, 3, 1, "", "location"]], "energydatamodel.timeseries.ElectricityProduction": [[8, 3, 1, "", "location"]], "energydatamodel.timeseries.EnergyPrices": [[8, 3, 1, "", "area"]], "energydatamodel.timeseries.HeatingAreaDemand": [[8, 3, 1, "", "area"]], "energydatamodel.timeseries.HeatingAreaProduction": [[8, 3, 1, "", "area"]], "energydatamodel.timeseries.HeatingDemand": [[8, 3, 1, "", "location"]], "energydatamodel.timeseries.HeatingProduction": [[8, 3, 1, "", "location"]], "energydatamodel.wind": [[9, 1, 1, "", "WindFarm"], [9, 1, 1, "", "WindPowerArea"], [9, 1, 1, "", "WindTurbine"]], "energydatamodel.wind.WindFarm": [[9, 3, 1, "", "farm_efficiency"], [9, 3, 1, "", "wind_turbines"]], "energydatamodel.wind.WindPowerArea": [[9, 3, 1, "", "area"], [9, 3, 1, "", "capacity"], [9, 3, 1, "", "farm_efficiency"], [9, 3, 1, "", "wind_turbines"]], "energydatamodel.wind.WindTurbine": [[9, 3, 1, "", "capacity"], [9, 3, 1, "", "hub_height"], [9, 3, 1, "", "power_coefficient_curve"], [9, 3, 1, "", "power_curve"], [9, 3, 1, "", "rotor_diameter"], [9, 3, 1, "", "turbine_model"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"energi": [0, 13, 20], "asset": [0, 20], "base": 1, "class": [1, 2, 3, 4, 5, 6, 7, 8, 9], "contain": 2, "geospati": 3, "heatpump": 4, "hydro": 5, "power": 6, "grid": 6, "pv": 7, "time": 8, "seri": 8, "wind": 9, "exampl": 10, "build": 11, "environ": [11, 12, 20], "microgrid": 12, "emflow": [13, 14, 20], "open": 13, "sourc": 13, "model": [13, 15], "framework": [13, 20], "content": 13, "indic": 13, "tabl": 13, "welcom": 14, "project": 14, "introduct": 14, "purpos": 14, "featur": 14, "instal": 14, "contribut": 14, "support": 14, "contact": 14, "agent": [16, 20], "modul": [16, 17, 18, 19], "optim": 17, "predictor": 18, "simul": [19, 20], "walkthrough": 20, "step": 20, "1": 20, "defin": 20, "your": 20, "2": 20, "specifi": 20, "dynam": 20, "state": 20, "variabl": 20, "3": 20, "action": 20, "4": 20, "creat": 20, "5": 20, "establish": 20, "object": 20, "function": 20, "6": 20, "design": 20, "polici": 20, "7": 20, "run": 20, "conclus": 20}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Energy assets": [[0, "energy-assets"]], "Base classes": [[1, "module-energydatamodel.base"]], "Container classes": [[2, "module-energydatamodel.container"]], "Geospatial classes": [[3, "module-energydatamodel.geospatial"]], "HeatPump classes": [[4, "module-energydatamodel.heatpump"]], "Hydro classes": [[5, "module-energydatamodel.hydro"]], "Power grid classes": [[6, "module-energydatamodel.powergrid"]], "PV classes": [[7, "module-energydatamodel.pv"]], "Time series classes": [[8, "module-energydatamodel.timeseries"]], "Wind classes": [[9, "module-energydatamodel.wind"]], "Examples": [[10, "examples"]], "Building Environment": [[11, "module-emflow.examples.building"]], "MicroGrid Environment": [[12, "module-emflow.examples.microgrid"]], "emflow: Open-source energy modelling framework": [[13, "emflow-open-source-energy-modelling-framework"]], "Contents:": [[13, null]], "Indices and tables": [[13, "indices-and-tables"]], "Welcome to the emflow Project": [[14, "welcome-to-the-emflow-project"]], "Introduction": [[14, "introduction"]], "Purpose": [[14, "purpose"]], "Features": [[14, "features"]], "Installation": [[14, "installation"]], "Contributing": [[14, "contributing"]], "Support and Contact": [[14, "support-and-contact"]], "Models": [[15, "models"]], "Agent Module": [[16, "module-emflow.models.agent"]], "Optimizer Module": [[17, "optimizer-module"]], "Predictor Module": [[18, "predictor-module"]], "Simulator Module": [[19, "simulator-module"]], "Walkthrough of the emflow framework": [[20, "walkthrough-of-the-emflow-framework"]], "Step 1: Define Your Energy Assets": [[20, "step-1-define-your-energy-assets"]], "Step 2: Specify Dynamic State Variables": [[20, "step-2-specify-dynamic-state-variables"]], "Step 3: Define Action Variables": [[20, "step-3-define-action-variables"]], "Step 4: Create the Environment": [[20, "step-4-create-the-environment"]], "Step 5: Establish the Objective Function": [[20, "step-5-establish-the-objective-function"]], "Step 6: Design Agents\u2019 Policies": [[20, "step-6-design-agents-policies"]], "Step 7: Run the Simulated Environment": [[20, "step-7-run-the-simulated-environment"]], "Conclusion": [[20, "conclusion"]]}, "indexentries": {"energyasset (class in energydatamodel.base)": [[1, "energydatamodel.base.EnergyAsset"]], "sensor (class in energydatamodel.base)": [[1, "energydatamodel.base.Sensor"]], "timeseries (class in energydatamodel.base)": [[1, "energydatamodel.base.TimeSeries"]], "energydatamodel.base": [[1, "module-energydatamodel.base"]], "location (energydatamodel.base.energyasset attribute)": [[1, "energydatamodel.base.EnergyAsset.location"]], "location (energydatamodel.base.sensor attribute)": [[1, "energydatamodel.base.Sensor.location"]], "module": [[1, "module-energydatamodel.base"], [2, "module-energydatamodel.container"], [3, "module-energydatamodel.geospatial"], [4, "module-energydatamodel.heatpump"], [5, "module-energydatamodel.hydro"], [6, "module-energydatamodel.powergrid"], [7, "module-energydatamodel.pv"], [8, "module-energydatamodel.timeseries"], [9, "module-energydatamodel.wind"], [11, "module-emflow.examples.building"], [12, "module-emflow.examples.microgrid"], [16, "module-emflow.models.agent"], [17, "module-emflow.models.optimizer"], [18, "module-emflow.models.predictor"], [19, "module-emflow.models.simulator"]], "name (energydatamodel.base.energyasset attribute)": [[1, "energydatamodel.base.EnergyAsset.name"]], "name (energydatamodel.base.sensor attribute)": [[1, "energydatamodel.base.Sensor.name"]], "name (energydatamodel.base.timeseries attribute)": [[1, "energydatamodel.base.TimeSeries.name"]], "energysystem (class in energydatamodel.container)": [[2, "energydatamodel.container.EnergySystem"]], "portfolio (class in energydatamodel.container)": [[2, "energydatamodel.container.Portfolio"]], "site (class in energydatamodel.container)": [[2, "energydatamodel.container.Site"]], "virtualpowerplant (class in energydatamodel.container)": [[2, "energydatamodel.container.VirtualPowerPlant"]], "add_assets() (energydatamodel.container.energysystem method)": [[2, "energydatamodel.container.EnergySystem.add_assets"]], "add_assets() (energydatamodel.container.site method)": [[2, "energydatamodel.container.Site.add_assets"]], "add_sites() (energydatamodel.container.energysystem method)": [[2, "energydatamodel.container.EnergySystem.add_sites"]], "altitude (energydatamodel.container.site attribute)": [[2, "energydatamodel.container.Site.altitude"]], "assets (energydatamodel.container.energysystem attribute)": [[2, "energydatamodel.container.EnergySystem.assets"]], "assets (energydatamodel.container.site attribute)": [[2, "energydatamodel.container.Site.assets"]], "energydatamodel.container": [[2, "module-energydatamodel.container"]], "get_summary() (energydatamodel.container.energysystem method)": [[2, "energydatamodel.container.EnergySystem.get_summary"]], "get_summary() (energydatamodel.container.site method)": [[2, "energydatamodel.container.Site.get_summary"]], "latitude (energydatamodel.container.site attribute)": [[2, "energydatamodel.container.Site.latitude"]], "list_assets() (energydatamodel.container.site method)": [[2, "energydatamodel.container.Site.list_assets"]], "location (energydatamodel.container.site attribute)": [[2, "energydatamodel.container.Site.location"]], "longitude (energydatamodel.container.site attribute)": [[2, "energydatamodel.container.Site.longitude"]], "name (energydatamodel.container.site attribute)": [[2, "energydatamodel.container.Site.name"]], "remove_asset() (energydatamodel.container.energysystem method)": [[2, "energydatamodel.container.EnergySystem.remove_asset"]], "remove_asset() (energydatamodel.container.site method)": [[2, "energydatamodel.container.Site.remove_asset"]], "remove_site() (energydatamodel.container.energysystem method)": [[2, "energydatamodel.container.EnergySystem.remove_site"]], "sites (energydatamodel.container.energysystem attribute)": [[2, "energydatamodel.container.EnergySystem.sites"]], "tz (energydatamodel.container.site attribute)": [[2, "energydatamodel.container.Site.tz"]], "linestring (class in energydatamodel.geospatial)": [[3, "energydatamodel.geospatial.LineString"]], "location (class in energydatamodel.geospatial)": [[3, "energydatamodel.geospatial.Location"]], "polygon (class in energydatamodel.geospatial)": [[3, "energydatamodel.geospatial.Polygon"]], "altitude (energydatamodel.geospatial.location attribute)": [[3, "energydatamodel.geospatial.Location.altitude"]], "energydatamodel.geospatial": [[3, "module-energydatamodel.geospatial"]], "from_point() (energydatamodel.geospatial.location class method)": [[3, "energydatamodel.geospatial.Location.from_point"]], "latitude (energydatamodel.geospatial.location attribute)": [[3, "energydatamodel.geospatial.Location.latitude"]], "longitude (energydatamodel.geospatial.location attribute)": [[3, "energydatamodel.geospatial.Location.longitude"]], "name (energydatamodel.geospatial.location attribute)": [[3, "energydatamodel.geospatial.Location.name"]], "name (energydatamodel.geospatial.polygon attribute)": [[3, "energydatamodel.geospatial.Polygon.name"]], "tz (energydatamodel.geospatial.location attribute)": [[3, "energydatamodel.geospatial.Location.tz"]], "heatpump (class in energydatamodel.heatpump)": [[4, "energydatamodel.heatpump.HeatPump"]], "capacity (energydatamodel.heatpump.heatpump attribute)": [[4, "energydatamodel.heatpump.HeatPump.capacity"]], "cop (energydatamodel.heatpump.heatpump attribute)": [[4, "energydatamodel.heatpump.HeatPump.cop"]], "energy_source (energydatamodel.heatpump.heatpump attribute)": [[4, "energydatamodel.heatpump.HeatPump.energy_source"]], "energydatamodel.heatpump": [[4, "module-energydatamodel.heatpump"]], "hydropowerplant (class in energydatamodel.hydro)": [[5, "energydatamodel.hydro.HydroPowerPlant"]], "hydroturbine (class in energydatamodel.hydro)": [[5, "energydatamodel.hydro.HydroTurbine"]], "reservoir (class in energydatamodel.hydro)": [[5, "energydatamodel.hydro.Reservoir"]], "annual_output (energydatamodel.hydro.hydropowerplant attribute)": [[5, "energydatamodel.hydro.HydroPowerPlant.annual_output"]], "average_depth (energydatamodel.hydro.reservoir attribute)": [[5, "energydatamodel.hydro.Reservoir.average_depth"]], "capacity (energydatamodel.hydro.hydropowerplant attribute)": [[5, "energydatamodel.hydro.HydroPowerPlant.capacity"]], "capacity (energydatamodel.hydro.hydroturbine attribute)": [[5, "energydatamodel.hydro.HydroTurbine.capacity"]], "capacity (energydatamodel.hydro.reservoir attribute)": [[5, "energydatamodel.hydro.Reservoir.capacity"]], "efficiency (energydatamodel.hydro.hydroturbine attribute)": [[5, "energydatamodel.hydro.HydroTurbine.efficiency"]], "energydatamodel.hydro": [[5, "module-energydatamodel.hydro"]], "environmental_impact (energydatamodel.hydro.hydropowerplant attribute)": [[5, "energydatamodel.hydro.HydroPowerPlant.environmental_impact"]], "location (energydatamodel.hydro.hydropowerplant attribute)": [[5, "energydatamodel.hydro.HydroPowerPlant.location"]], "location (energydatamodel.hydro.reservoir attribute)": [[5, "energydatamodel.hydro.Reservoir.location"]], "maintenance_schedule (energydatamodel.hydro.hydropowerplant attribute)": [[5, "energydatamodel.hydro.HydroPowerPlant.maintenance_schedule"]], "operational_since (energydatamodel.hydro.hydropowerplant attribute)": [[5, "energydatamodel.hydro.HydroPowerPlant.operational_since"]], "operational_since (energydatamodel.hydro.hydroturbine attribute)": [[5, "energydatamodel.hydro.HydroTurbine.operational_since"]], "reservoir_capacity (energydatamodel.hydro.hydropowerplant attribute)": [[5, "energydatamodel.hydro.HydroPowerPlant.reservoir_capacity"]], "river (energydatamodel.hydro.hydropowerplant attribute)": [[5, "energydatamodel.hydro.HydroPowerPlant.river"]], "surface_area (energydatamodel.hydro.reservoir attribute)": [[5, "energydatamodel.hydro.Reservoir.surface_area"]], "turbine_type (energydatamodel.hydro.hydropowerplant attribute)": [[5, "energydatamodel.hydro.HydroPowerPlant.turbine_type"]], "turbine_type (energydatamodel.hydro.hydroturbine attribute)": [[5, "energydatamodel.hydro.HydroTurbine.turbine_type"]], "bus (class in energydatamodel.powergrid)": [[6, "energydatamodel.powergrid.Bus"]], "carrier (class in energydatamodel.powergrid)": [[6, "energydatamodel.powergrid.Carrier"]], "line (class in energydatamodel.powergrid)": [[6, "energydatamodel.powergrid.Line"]], "link (class in energydatamodel.powergrid)": [[6, "energydatamodel.powergrid.Link"]], "network (class in energydatamodel.powergrid)": [[6, "energydatamodel.powergrid.Network"]], "subnetwork (class in energydatamodel.powergrid)": [[6, "energydatamodel.powergrid.SubNetwork"]], "transformer (class in energydatamodel.powergrid)": [[6, "energydatamodel.powergrid.Transformer"]], "buses (energydatamodel.powergrid.subnetwork attribute)": [[6, "energydatamodel.powergrid.SubNetwork.buses"]], "capacity (energydatamodel.powergrid.line attribute)": [[6, "energydatamodel.powergrid.Line.capacity"]], "capacity (energydatamodel.powergrid.link attribute)": [[6, "energydatamodel.powergrid.Link.capacity"]], "capacity (energydatamodel.powergrid.transformer attribute)": [[6, "energydatamodel.powergrid.Transformer.capacity"]], "carrier (energydatamodel.powergrid.bus attribute)": [[6, "energydatamodel.powergrid.Bus.carrier"]], "end_bus (energydatamodel.powergrid.line attribute)": [[6, "energydatamodel.powergrid.Line.end_bus"]], "end_bus (energydatamodel.powergrid.link attribute)": [[6, "energydatamodel.powergrid.Link.end_bus"]], "energydatamodel.powergrid": [[6, "module-energydatamodel.powergrid"]], "lines (energydatamodel.powergrid.subnetwork attribute)": [[6, "energydatamodel.powergrid.SubNetwork.lines"]], "links (energydatamodel.powergrid.network attribute)": [[6, "energydatamodel.powergrid.Network.links"]], "name (energydatamodel.powergrid.bus attribute)": [[6, "energydatamodel.powergrid.Bus.name"]], "name (energydatamodel.powergrid.carrier attribute)": [[6, "energydatamodel.powergrid.Carrier.name"]], "name (energydatamodel.powergrid.line attribute)": [[6, "energydatamodel.powergrid.Line.name"]], "name (energydatamodel.powergrid.link attribute)": [[6, "energydatamodel.powergrid.Link.name"]], "name (energydatamodel.powergrid.network attribute)": [[6, "energydatamodel.powergrid.Network.name"]], "name (energydatamodel.powergrid.subnetwork attribute)": [[6, "energydatamodel.powergrid.SubNetwork.name"]], "name (energydatamodel.powergrid.transformer attribute)": [[6, "energydatamodel.powergrid.Transformer.name"]], "primary_bus (energydatamodel.powergrid.transformer attribute)": [[6, "energydatamodel.powergrid.Transformer.primary_bus"]], "secondary_bus (energydatamodel.powergrid.transformer attribute)": [[6, "energydatamodel.powergrid.Transformer.secondary_bus"]], "start_bus (energydatamodel.powergrid.line attribute)": [[6, "energydatamodel.powergrid.Line.start_bus"]], "start_bus (energydatamodel.powergrid.link attribute)": [[6, "energydatamodel.powergrid.Link.start_bus"]], "subnetworks (energydatamodel.powergrid.network attribute)": [[6, "energydatamodel.powergrid.Network.subnetworks"]], "transformers (energydatamodel.powergrid.network attribute)": [[6, "energydatamodel.powergrid.Network.transformers"]], "type (energydatamodel.powergrid.carrier attribute)": [[6, "energydatamodel.powergrid.Carrier.type"]], "fixedmount (class in energydatamodel.pv)": [[7, "energydatamodel.pv.FixedMount"]], "pvarray (class in energydatamodel.pv)": [[7, "energydatamodel.pv.PVArray"]], "pvsystem (class in energydatamodel.pv)": [[7, "energydatamodel.pv.PVSystem"]], "singleaxistrackermount (class in energydatamodel.pv)": [[7, "energydatamodel.pv.SingleAxisTrackerMount"]], "albedo (energydatamodel.pv.pvsystem attribute)": [[7, "energydatamodel.pv.PVSystem.albedo"]], "area (energydatamodel.pv.pvarray attribute)": [[7, "energydatamodel.pv.PVArray.area"]], "arrays (energydatamodel.pv.pvsystem attribute)": [[7, "energydatamodel.pv.PVSystem.arrays"]], "axis_azimuth (energydatamodel.pv.singleaxistrackermount attribute)": [[7, "energydatamodel.pv.SingleAxisTrackerMount.axis_azimuth"]], "axis_tilt (energydatamodel.pv.singleaxistrackermount attribute)": [[7, "energydatamodel.pv.SingleAxisTrackerMount.axis_tilt"]], "backtrack (energydatamodel.pv.singleaxistrackermount attribute)": [[7, "energydatamodel.pv.SingleAxisTrackerMount.backtrack"]], "capacity (energydatamodel.pv.pvarray attribute)": [[7, "energydatamodel.pv.PVArray.capacity"]], "cross_axis_tilt (energydatamodel.pv.singleaxistrackermount attribute)": [[7, "energydatamodel.pv.SingleAxisTrackerMount.cross_axis_tilt"]], "efficiency (energydatamodel.pv.pvarray attribute)": [[7, "energydatamodel.pv.PVArray.efficiency"]], "energydatamodel.pv": [[7, "module-energydatamodel.pv"]], "gcr (energydatamodel.pv.singleaxistrackermount attribute)": [[7, "energydatamodel.pv.SingleAxisTrackerMount.gcr"]], "max_angle (energydatamodel.pv.singleaxistrackermount attribute)": [[7, "energydatamodel.pv.SingleAxisTrackerMount.max_angle"]], "module (energydatamodel.pv.pvarray attribute)": [[7, "energydatamodel.pv.PVArray.module"]], "module_height (energydatamodel.pv.singleaxistrackermount attribute)": [[7, "energydatamodel.pv.SingleAxisTrackerMount.module_height"]], "module_parameters (energydatamodel.pv.pvarray attribute)": [[7, "energydatamodel.pv.PVArray.module_parameters"]], "module_type (energydatamodel.pv.pvarray attribute)": [[7, "energydatamodel.pv.PVArray.module_type"]], "racking_model (energydatamodel.pv.singleaxistrackermount attribute)": [[7, "energydatamodel.pv.SingleAxisTrackerMount.racking_model"]], "surface_azimuth (energydatamodel.pv.fixedmount attribute)": [[7, "energydatamodel.pv.FixedMount.surface_azimuth"]], "surface_tilt (energydatamodel.pv.fixedmount attribute)": [[7, "energydatamodel.pv.FixedMount.surface_tilt"]], "surface_type (energydatamodel.pv.pvsystem attribute)": [[7, "energydatamodel.pv.PVSystem.surface_type"]], "temperature_model_parameters (energydatamodel.pv.pvarray attribute)": [[7, "energydatamodel.pv.PVArray.temperature_model_parameters"]], "carbonintensity (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.CarbonIntensity"]], "electricityareademand (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.ElectricityAreaDemand"]], "electricityareaproduction (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.ElectricityAreaProduction"]], "electricitydemand (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.ElectricityDemand"]], "electricityproduction (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.ElectricityProduction"]], "energyprices (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.EnergyPrices"]], "heatingareademand (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.HeatingAreaDemand"]], "heatingareaproduction (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.HeatingAreaProduction"]], "heatingdemand (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.HeatingDemand"]], "heatingproduction (class in energydatamodel.timeseries)": [[8, "energydatamodel.timeseries.HeatingProduction"]], "area (energydatamodel.timeseries.carbonintensity attribute)": [[8, "energydatamodel.timeseries.CarbonIntensity.area"]], "area (energydatamodel.timeseries.electricityareademand attribute)": [[8, "energydatamodel.timeseries.ElectricityAreaDemand.area"]], "area (energydatamodel.timeseries.electricityareaproduction attribute)": [[8, "energydatamodel.timeseries.ElectricityAreaProduction.area"]], "area (energydatamodel.timeseries.energyprices attribute)": [[8, "energydatamodel.timeseries.EnergyPrices.area"]], "area (energydatamodel.timeseries.heatingareademand attribute)": [[8, "energydatamodel.timeseries.HeatingAreaDemand.area"]], "area (energydatamodel.timeseries.heatingareaproduction attribute)": [[8, "energydatamodel.timeseries.HeatingAreaProduction.area"]], "energydatamodel.timeseries": [[8, "module-energydatamodel.timeseries"]], "location (energydatamodel.timeseries.electricitydemand attribute)": [[8, "energydatamodel.timeseries.ElectricityDemand.location"]], "location (energydatamodel.timeseries.electricityproduction attribute)": [[8, "energydatamodel.timeseries.ElectricityProduction.location"]], "location (energydatamodel.timeseries.heatingdemand attribute)": [[8, "energydatamodel.timeseries.HeatingDemand.location"]], "location (energydatamodel.timeseries.heatingproduction attribute)": [[8, "energydatamodel.timeseries.HeatingProduction.location"]], "windfarm (class in energydatamodel.wind)": [[9, "energydatamodel.wind.WindFarm"]], "windpowerarea (class in energydatamodel.wind)": [[9, "energydatamodel.wind.WindPowerArea"]], "windturbine (class in energydatamodel.wind)": [[9, "energydatamodel.wind.WindTurbine"]], "area (energydatamodel.wind.windpowerarea attribute)": [[9, "energydatamodel.wind.WindPowerArea.area"]], "capacity (energydatamodel.wind.windpowerarea attribute)": [[9, "energydatamodel.wind.WindPowerArea.capacity"]], "capacity (energydatamodel.wind.windturbine attribute)": [[9, "energydatamodel.wind.WindTurbine.capacity"]], "energydatamodel.wind": [[9, "module-energydatamodel.wind"]], "farm_efficiency (energydatamodel.wind.windfarm attribute)": [[9, "energydatamodel.wind.WindFarm.farm_efficiency"]], "farm_efficiency (energydatamodel.wind.windpowerarea attribute)": [[9, "energydatamodel.wind.WindPowerArea.farm_efficiency"]], "hub_height (energydatamodel.wind.windturbine attribute)": [[9, "energydatamodel.wind.WindTurbine.hub_height"]], "power_coefficient_curve (energydatamodel.wind.windturbine attribute)": [[9, "energydatamodel.wind.WindTurbine.power_coefficient_curve"]], "power_curve (energydatamodel.wind.windturbine attribute)": [[9, "energydatamodel.wind.WindTurbine.power_curve"]], "rotor_diameter (energydatamodel.wind.windturbine attribute)": [[9, "energydatamodel.wind.WindTurbine.rotor_diameter"]], "turbine_model (energydatamodel.wind.windturbine attribute)": [[9, "energydatamodel.wind.WindTurbine.turbine_model"]], "wind_turbines (energydatamodel.wind.windfarm attribute)": [[9, "energydatamodel.wind.WindFarm.wind_turbines"]], "wind_turbines (energydatamodel.wind.windpowerarea attribute)": [[9, "energydatamodel.wind.WindPowerArea.wind_turbines"]], "microgridenv (class in emflow.examples.building)": [[11, "emflow.examples.building.MicroGridEnv"]], "state (class in emflow.examples.building)": [[11, "emflow.examples.building.State"]], "battery_storage (emflow.examples.building.state attribute)": [[11, "emflow.examples.building.State.battery_storage"]], "close() (emflow.examples.building.microgridenv method)": [[11, "emflow.examples.building.MicroGridEnv.close"]], "consumption (emflow.examples.building.state attribute)": [[11, "emflow.examples.building.State.consumption"]], "emflow.examples.building": [[11, "module-emflow.examples.building"]], "from_vector() (emflow.examples.building.state class method)": [[11, "emflow.examples.building.State.from_vector"]], "grid_import (emflow.examples.building.state attribute)": [[11, "emflow.examples.building.State.grid_import"]], "grid_import_peak (emflow.examples.building.state attribute)": [[11, "emflow.examples.building.State.grid_import_peak"]], "hydrogen_storage (emflow.examples.building.state attribute)": [[11, "emflow.examples.building.State.hydrogen_storage"]], "metadata (emflow.examples.building.microgridenv attribute)": [[11, "emflow.examples.building.MicroGridEnv.metadata"]], "pv_production (emflow.examples.building.state attribute)": [[11, "emflow.examples.building.State.pv_production"]], "render() (emflow.examples.building.microgridenv method)": [[11, "emflow.examples.building.MicroGridEnv.render"]], "reset() (emflow.examples.building.microgridenv method)": [[11, "emflow.examples.building.MicroGridEnv.reset"]], "spot_market_price (emflow.examples.building.state attribute)": [[11, "emflow.examples.building.State.spot_market_price"]], "step() (emflow.examples.building.microgridenv method)": [[11, "emflow.examples.building.MicroGridEnv.step"]], "vector (emflow.examples.building.state property)": [[11, "emflow.examples.building.State.vector"]], "wind_production (emflow.examples.building.state attribute)": [[11, "emflow.examples.building.State.wind_production"]], "microgridenv (class in emflow.examples.microgrid)": [[12, "emflow.examples.microgrid.MicroGridEnv"]], "state (class in emflow.examples.microgrid)": [[12, "emflow.examples.microgrid.State"]], "battery_storage (emflow.examples.microgrid.state attribute)": [[12, "emflow.examples.microgrid.State.battery_storage"]], "close() (emflow.examples.microgrid.microgridenv method)": [[12, "emflow.examples.microgrid.MicroGridEnv.close"]], "consumption (emflow.examples.microgrid.state attribute)": [[12, "emflow.examples.microgrid.State.consumption"]], "emflow.examples.microgrid": [[12, "module-emflow.examples.microgrid"]], "from_vector() (emflow.examples.microgrid.state class method)": [[12, "emflow.examples.microgrid.State.from_vector"]], "grid_import (emflow.examples.microgrid.state attribute)": [[12, "emflow.examples.microgrid.State.grid_import"]], "grid_import_peak (emflow.examples.microgrid.state attribute)": [[12, "emflow.examples.microgrid.State.grid_import_peak"]], "hydrogen_storage (emflow.examples.microgrid.state attribute)": [[12, "emflow.examples.microgrid.State.hydrogen_storage"]], "metadata (emflow.examples.microgrid.microgridenv attribute)": [[12, "emflow.examples.microgrid.MicroGridEnv.metadata"]], "pv_production (emflow.examples.microgrid.state attribute)": [[12, "emflow.examples.microgrid.State.pv_production"]], "render() (emflow.examples.microgrid.microgridenv method)": [[12, "emflow.examples.microgrid.MicroGridEnv.render"]], "reset() (emflow.examples.microgrid.microgridenv method)": [[12, "emflow.examples.microgrid.MicroGridEnv.reset"]], "spot_market_price (emflow.examples.microgrid.state attribute)": [[12, "emflow.examples.microgrid.State.spot_market_price"]], "step() (emflow.examples.microgrid.microgridenv method)": [[12, "emflow.examples.microgrid.MicroGridEnv.step"]], "vector (emflow.examples.microgrid.state property)": [[12, "emflow.examples.microgrid.State.vector"]], "wind_production (emflow.examples.microgrid.state attribute)": [[12, "emflow.examples.microgrid.State.wind_production"]], "agent (class in emflow.models.agent)": [[16, "emflow.models.agent.Agent"]], "choose_action() (emflow.models.agent.agent method)": [[16, "emflow.models.agent.Agent.choose_action"]], "emflow.models.agent": [[16, "module-emflow.models.agent"]], "learn() (emflow.models.agent.agent method)": [[16, "emflow.models.agent.Agent.learn"]], "optimizer (class in emflow.models.optimizer)": [[17, "emflow.models.optimizer.Optimizer"]], "emflow.models.optimizer": [[17, "module-emflow.models.optimizer"]], "optimize() (emflow.models.optimizer.optimizer method)": [[17, "emflow.models.optimizer.Optimizer.optimize"]], "predictor (class in emflow.models.predictor)": [[18, "emflow.models.predictor.Predictor"]], "emflow.models.predictor": [[18, "module-emflow.models.predictor"]], "predict() (emflow.models.predictor.predictor method)": [[18, "emflow.models.predictor.Predictor.predict"]], "train() (emflow.models.predictor.predictor method)": [[18, "emflow.models.predictor.Predictor.train"]], "simulator (class in emflow.models.simulator)": [[19, "emflow.models.simulator.Simulator"]], "emflow.models.simulator": [[19, "module-emflow.models.simulator"]], "reset() (emflow.models.simulator.simulator method)": [[19, "emflow.models.simulator.Simulator.reset"]], "step() (emflow.models.simulator.simulator method)": [[19, "emflow.models.simulator.Simulator.step"]]}})