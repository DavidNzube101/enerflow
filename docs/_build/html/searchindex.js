Search.setIndex({"docnames": ["agents", "environments/building", "environments/microgrid", "envs", "index", "optimizer", "predictor", "simulator"], "filenames": ["agents.rst", "environments/building.rst", "environments/microgrid.rst", "envs.rst", "index.rst", "optimizer.rst", "predictor.rst", "simulator.rst"], "titles": ["Agent Module", "Building Environment", "MicroGrid Environment", "Environment Module", "Welcome to emflow\u2019s documentation!", "Optimizer Module", "Predictor Module", "Simulator Module"], "terms": {"class": [0, 1, 2, 5, 6, 7], "emflow": [0, 1, 2, 5, 6, 7], "base": [0, 1, 2, 5, 6, 7], "object": [0, 1, 2, 5, 6, 7], "choose_act": 0, "state": [0, 1, 2, 3, 7], "choos": 0, "an": [0, 1, 2, 7], "action": [0, 1, 2, 7], "given": [0, 6], "paramet": [0, 5, 6, 7], "The": [0, 1, 2, 5, 6, 7], "current": [0, 1, 2], "environ": [0, 4], "return": [0, 1, 2, 5, 6, 7], "chosen": [0, 1, 2], "learn": [0, 1, 2], "reward": [0, 1, 2], "next_stat": 0, "from": [0, 1, 2], "experi": 0, "us": [0, 1, 2, 6], "train": [0, 6], "taken": 0, "receiv": 0, "next": [0, 7], "env": [1, 2], "custom": [1, 2], "follow": [], "gym": [1, 2], "interfac": [], "thi": [1, 2], "replac": [], "concept": [], "contribut": [], "close": [1, 2], "overrid": [1, 2], "your": [1, 2], "subclass": [1, 2], "perform": [1, 2, 5], "ani": [1, 2, 7], "necessari": [1, 2], "cleanup": [1, 2], "automat": [1, 2], "themselv": [1, 2], "when": [1, 2], "garbag": [1, 2], "collect": [1, 2], "program": [1, 2], "exit": [1, 2], "render": [1, 2], "mode": [1, 2], "human": [1, 2], "comput": [1, 2], "frame": [1, 2], "specifi": [1, 2], "render_mod": [1, 2], "attribut": [1, 2], "dure": [1, 2], "initi": [1, 2, 7], "set": [1, 2], "support": [1, 2], "vari": [1, 2], "per": [1, 2], "And": [1, 2], "some": [1, 2], "third": [1, 2], "parti": [1, 2], "mai": [1, 2], "all": [1, 2], "By": [1, 2], "convent": [1, 2], "i": [1, 2, 6], "none": [1, 2, 5], "default": [1, 2], "continu": [1, 2], "displai": [1, 2], "termin": [1, 2], "usual": [1, 2], "consumpt": [1, 2], "rgb_arrai": [1, 2], "singl": [1, 2], "repres": [1, 2], "A": [1, 2, 7], "numpi": [1, 2], "ndarrai": [1, 2], "shape": [1, 2], "x": [1, 2], "y": [1, 2], "3": [1, 2], "rgb": [1, 2], "valu": [1, 2], "pixel": [1, 2], "imag": [1, 2], "rgb_array_list": [1, 2], "list": [1, 2], "sinc": [1, 2], "last": [1, 2], "reset": [1, 2, 7], "each": [1, 2], "ansi": [1, 2], "string": [1, 2], "str": [1, 2], "stringio": [1, 2], "contain": [1, 2, 7], "style": [1, 2], "text": [1, 2], "represent": [1, 2], "time": [1, 2], "step": [1, 2, 7], "can": [1, 2], "includ": [1, 2], "newlin": [1, 2], "escap": [1, 2], "sequenc": [1, 2], "e": [1, 2], "g": [1, 2], "color": [1, 2], "note": [1, 2], "make": [1, 2, 6], "sure": [1, 2], "": [1, 2, 7], "metadata": [1, 2], "kei": [1, 2], "It": [1, 2], "recommend": [1, 2], "call": [1, 2], "super": [1, 2], "implement": [1, 2], "function": [1, 2, 5], "method": [1, 2], "observ": [1, 2], "random": [1, 2], "number": [1, 2], "gener": [1, 2], "seed": [1, 2], "integ": [1, 2], "ha": [1, 2], "yet": [1, 2], "If": [1, 2], "alreadi": [1, 2], "rng": [1, 2], "should": [1, 2], "moreov": [1, 2], "typic": [1, 2], "case": [1, 2], "right": [1, 2], "after": [1, 2], "never": [1, 2], "again": [1, 2], "arg": [1, 2], "option": [1, 2, 5], "int": [1, 2], "prng": [1, 2], "doe": [1, 2], "have": [1, 2], "pass": [1, 2], "sourc": [1, 2], "entropi": [1, 2], "timestamp": [1, 2], "dev": [1, 2], "urandom": [1, 2], "howev": [1, 2], "you": [1, 2], "even": [1, 2], "exist": [1, 2], "want": [1, 2], "been": [1, 2], "pleas": [1, 2], "refer": [1, 2], "minim": [1, 2, 5], "exampl": [1, 2], "abov": [1, 2], "see": [1, 2], "paradigm": [1, 2], "dict": [1, 2], "addit": [1, 2, 7], "inform": [1, 2], "how": [1, 2], "depend": [1, 2], "specif": [1, 2], "element": [1, 2], "observation_spac": [1, 2], "arrai": [1, 2], "analog": [1, 2], "info": [1, 2, 7], "dictionari": [1, 2], "auxiliari": [1, 2], "complement": [1, 2], "run": [1, 2], "one": [1, 2], "timestep": [1, 2], "dynam": [1, 2], "end": [1, 2], "episod": [1, 2], "reach": [1, 2], "ar": [1, 2], "respons": [1, 2], "accept": [1, 2], "either": [1, 2], "tupl": [1, 2, 7], "truncat": [1, 2], "acttyp": [1, 2], "provid": [1, 2], "agent": [1, 2, 4], "instanc": [1, 2], "posit": [1, 2], "veloc": [1, 2], "certain": [1, 2], "float": [1, 2], "amount": [1, 2], "result": [1, 2, 5], "take": [1, 2], "bool": [1, 2], "whether": [1, 2], "defin": [1, 2], "under": [1, 2], "mdp": [1, 2], "task": [1, 2], "In": [1, 2], "further": [1, 2], "could": [1, 2], "undefin": [1, 2], "condit": [1, 2], "outsid": [1, 2], "scope": [1, 2], "satisfi": [1, 2], "timelimit": [1, 2], "also": [1, 2], "indic": [1, 2], "physic": [1, 2], "go": [1, 2], "out": [1, 2], "bound": [1, 2], "prematur": [1, 2], "befor": [1, 2], "diagnost": [1, 2], "help": [1, 2], "debug": [1, 2], "log": [1, 2], "might": [1, 2], "metric": [1, 2], "describ": [1, 2], "variabl": [1, 2], "hidden": [1, 2], "individu": [1, 2], "term": [1, 2], "combin": [1, 2], "produc": [1, 2], "total": [1, 2], "distinguish": [1, 2], "deprec": [1, 2], "favour": [1, 2], "two": [1, 2], "boolean": [1, 2], "remov": [1, 2], "futur": [1, 2], "version": [1, 2], "done": [1, 2], "which": [1, 2, 6], "signal": [1, 2], "emit": [1, 2], "differ": [1, 2], "reason": [1, 2], "mayb": [1, 2], "underli": [1, 2], "wa": [1, 2], "solv": [1, 2], "successfulli": [1, 2], "exceed": [1, 2], "simul": [1, 2, 4], "enter": [1, 2], "invalid": [1, 2], "modul": [1, 2, 4], "predictor": 4, "optim": 4, "index": 4, "search": 4, "page": 4, "objective_funct": 5, "constraint": 5, "maxim": 5, "problem": 5, "predict": 6, "input_data": 6, "input": 6, "data": 6, "made": 6, "output": 6, "model": 6, "training_data": 6, "initial_st": 7, "new": 7, "start": 7, "updat": 7, "appli": 7, "microgrid": [1, 3, 4], "microgridenv": [1, 2, 3], "fals": [1, 2], "pv_product": [1, 2], "wind_product": [1, 2], "battery_storag": [1, 2], "hydrogen_storag": [1, 2], "grid_import": [1, 2], "grid_import_peak": [1, 2], "spot_market_pric": [1, 2], "vector": [1, 2], "kwh": [1, 2], "h": [1, 2], "power": [1, 2], "product": [1, 2], "solar": [1, 2], "wind": [1, 2], "potenti": [1, 2], "energi": [1, 2], "store": [1, 2], "batteri": [1, 2], "hydrogen": [1, 2], "import": [1, 2], "grid": [1, 2], "peak": [1, 2], "nok": [1, 2], "spot": [1, 2], "market": [1, 2], "price": [1, 2], "trondheim": [1, 2], "classmethod": [1, 2], "from_vector": [1, 2], "properti": [1, 2], "openai": [1, 2], "build": [3, 4]}, "objects": {"emflow": [[0, 0, 0, "-", "agents"], [5, 0, 0, "-", "optimizer"], [6, 0, 0, "-", "predictor"], [7, 0, 0, "-", "simulator"]], "emflow.agents": [[0, 1, 1, "", "Agent"]], "emflow.agents.Agent": [[0, 2, 1, "", "choose_action"], [0, 2, 1, "", "learn"]], "emflow.envs": [[1, 0, 0, "-", "building"], [2, 0, 0, "-", "microgrid"]], "emflow.envs.building": [[1, 1, 1, "", "MicroGridEnv"], [1, 1, 1, "", "State"]], "emflow.envs.building.MicroGridEnv": [[1, 2, 1, "", "close"], [1, 3, 1, "", "metadata"], [1, 2, 1, "", "render"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "step"]], "emflow.envs.building.State": [[1, 3, 1, "", "battery_storage"], [1, 3, 1, "", "consumption"], [1, 2, 1, "", "from_vector"], [1, 3, 1, "", "grid_import"], [1, 3, 1, "", "grid_import_peak"], [1, 3, 1, "", "hydrogen_storage"], [1, 3, 1, "", "pv_production"], [1, 3, 1, "", "spot_market_price"], [1, 4, 1, "", "vector"], [1, 3, 1, "", "wind_production"]], "emflow.envs.microgrid": [[2, 1, 1, "", "MicroGridEnv"], [2, 1, 1, "", "State"]], "emflow.envs.microgrid.MicroGridEnv": [[2, 2, 1, "", "close"], [2, 3, 1, "", "metadata"], [2, 2, 1, "", "render"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "step"]], "emflow.envs.microgrid.State": [[2, 3, 1, "", "battery_storage"], [2, 3, 1, "", "consumption"], [2, 2, 1, "", "from_vector"], [2, 3, 1, "", "grid_import"], [2, 3, 1, "", "grid_import_peak"], [2, 3, 1, "", "hydrogen_storage"], [2, 3, 1, "", "pv_production"], [2, 3, 1, "", "spot_market_price"], [2, 4, 1, "", "vector"], [2, 3, 1, "", "wind_production"]], "emflow.optimizer": [[5, 1, 1, "", "Optimizer"]], "emflow.optimizer.Optimizer": [[5, 2, 1, "", "optimize"]], "emflow.predictor": [[6, 1, 1, "", "Predictor"]], "emflow.predictor.Predictor": [[6, 2, 1, "", "predict"], [6, 2, 1, "", "train"]], "emflow.simulator": [[7, 1, 1, "", "Simulator"]], "emflow.simulator.Simulator": [[7, 2, 1, "", "reset"], [7, 2, 1, "", "step"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"agent": 0, "modul": [0, 3, 5, 6, 7], "environ": [1, 2, 3], "welcom": 4, "emflow": 4, "": 4, "document": 4, "content": 4, "indic": 4, "tabl": 4, "optim": 5, "predictor": 6, "simul": 7, "microgrid": 2, "build": 1}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Agent Module": [[0, "module-emflow.agents"]], "Welcome to emflow\u2019s documentation!": [[4, "welcome-to-emflow-s-documentation"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "Optimizer Module": [[5, "optimizer-module"]], "Predictor Module": [[6, "predictor-module"]], "Simulator Module": [[7, "simulator-module"]], "Environment Module": [[3, "environment-module"]], "Building Environment": [[1, "module-emflow.envs.building"]], "MicroGrid Environment": [[2, "module-emflow.envs.microgrid"]]}, "indexentries": {"microgridenv (class in emflow.envs.building)": [[1, "emflow.envs.building.MicroGridEnv"]], "state (class in emflow.envs.building)": [[1, "emflow.envs.building.State"]], "battery_storage (emflow.envs.building.state attribute)": [[1, "emflow.envs.building.State.battery_storage"]], "close() (emflow.envs.building.microgridenv method)": [[1, "emflow.envs.building.MicroGridEnv.close"]], "consumption (emflow.envs.building.state attribute)": [[1, "emflow.envs.building.State.consumption"]], "emflow.envs.building": [[1, "module-emflow.envs.building"]], "from_vector() (emflow.envs.building.state class method)": [[1, "emflow.envs.building.State.from_vector"]], "grid_import (emflow.envs.building.state attribute)": [[1, "emflow.envs.building.State.grid_import"]], "grid_import_peak (emflow.envs.building.state attribute)": [[1, "emflow.envs.building.State.grid_import_peak"]], "hydrogen_storage (emflow.envs.building.state attribute)": [[1, "emflow.envs.building.State.hydrogen_storage"]], "metadata (emflow.envs.building.microgridenv attribute)": [[1, "emflow.envs.building.MicroGridEnv.metadata"]], "module": [[1, "module-emflow.envs.building"], [2, "module-emflow.envs.microgrid"]], "pv_production (emflow.envs.building.state attribute)": [[1, "emflow.envs.building.State.pv_production"]], "render() (emflow.envs.building.microgridenv method)": [[1, "emflow.envs.building.MicroGridEnv.render"]], "reset() (emflow.envs.building.microgridenv method)": [[1, "emflow.envs.building.MicroGridEnv.reset"]], "spot_market_price (emflow.envs.building.state attribute)": [[1, "emflow.envs.building.State.spot_market_price"]], "step() (emflow.envs.building.microgridenv method)": [[1, "emflow.envs.building.MicroGridEnv.step"]], "vector (emflow.envs.building.state property)": [[1, "emflow.envs.building.State.vector"]], "wind_production (emflow.envs.building.state attribute)": [[1, "emflow.envs.building.State.wind_production"]], "microgridenv (class in emflow.envs.microgrid)": [[2, "emflow.envs.microgrid.MicroGridEnv"]], "state (class in emflow.envs.microgrid)": [[2, "emflow.envs.microgrid.State"]], "battery_storage (emflow.envs.microgrid.state attribute)": [[2, "emflow.envs.microgrid.State.battery_storage"]], "close() (emflow.envs.microgrid.microgridenv method)": [[2, "emflow.envs.microgrid.MicroGridEnv.close"]], "consumption (emflow.envs.microgrid.state attribute)": [[2, "emflow.envs.microgrid.State.consumption"]], "emflow.envs.microgrid": [[2, "module-emflow.envs.microgrid"]], "from_vector() (emflow.envs.microgrid.state class method)": [[2, "emflow.envs.microgrid.State.from_vector"]], "grid_import (emflow.envs.microgrid.state attribute)": [[2, "emflow.envs.microgrid.State.grid_import"]], "grid_import_peak (emflow.envs.microgrid.state attribute)": [[2, "emflow.envs.microgrid.State.grid_import_peak"]], "hydrogen_storage (emflow.envs.microgrid.state attribute)": [[2, "emflow.envs.microgrid.State.hydrogen_storage"]], "metadata (emflow.envs.microgrid.microgridenv attribute)": [[2, "emflow.envs.microgrid.MicroGridEnv.metadata"]], "pv_production (emflow.envs.microgrid.state attribute)": [[2, "emflow.envs.microgrid.State.pv_production"]], "render() (emflow.envs.microgrid.microgridenv method)": [[2, "emflow.envs.microgrid.MicroGridEnv.render"]], "reset() (emflow.envs.microgrid.microgridenv method)": [[2, "emflow.envs.microgrid.MicroGridEnv.reset"]], "spot_market_price (emflow.envs.microgrid.state attribute)": [[2, "emflow.envs.microgrid.State.spot_market_price"]], "step() (emflow.envs.microgrid.microgridenv method)": [[2, "emflow.envs.microgrid.MicroGridEnv.step"]], "vector (emflow.envs.microgrid.state property)": [[2, "emflow.envs.microgrid.State.vector"]], "wind_production (emflow.envs.microgrid.state attribute)": [[2, "emflow.envs.microgrid.State.wind_production"]]}})